'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.4952
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Imports System.Configuration

'
'This source code was auto-generated by wsdl, Version=2.0.50727.1432.
'
Namespace Seguridad.UsrSeguridad.Dat_Horariosasmx



    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="Dat_HorariosasmxSoap", [Namespace]:="http://www.prosoft.cr/")> _
    Partial Public Class Dat_Horariosasmx
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private AgregarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private BorrarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private ModificarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerRegistroBDOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerListaTotalBDOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = ConfigurationManager.AppSettings(Constantes.ServidorDatos) + "UsrSeguridad/Dat_Horariosasmx.asmx"
        End Sub

        '''<remarks/>
        Public Event AgregarBDCompleted As AgregarBDCompletedEventHandler

        '''<remarks/>
        Public Event BorrarBDCompleted As BorrarBDCompletedEventHandler

        '''<remarks/>
        Public Event ModificarBDCompleted As ModificarBDCompletedEventHandler

        '''<remarks/>
        Public Event TraerRegistroBDCompleted As TraerRegistroBDCompletedEventHandler

        '''<remarks/>
        Public Event TraerListaTotalBDCompleted As TraerListaTotalBDCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AgregarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub AgregarBD( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Byte, _
                    ByVal varAccesoMartes As Byte, _
                    ByVal varAccesoMiercoles As Byte, _
                    ByVal varAccesoJueves As Byte, _
                    ByVal varAccesoViernes As Byte, _
                    ByVal varAccesoSabado As Byte, _
                    ByVal varAccesoDomingo As Byte, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String)
            Me.Invoke("AgregarBD", New Object() {varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginAgregarBD( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Byte, _
                    ByVal varAccesoMartes As Byte, _
                    ByVal varAccesoMiercoles As Byte, _
                    ByVal varAccesoJueves As Byte, _
                    ByVal varAccesoViernes As Byte, _
                    ByVal varAccesoSabado As Byte, _
                    ByVal varAccesoDomingo As Byte, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String, _
                    ByVal callback As System.AsyncCallback, _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarBD", New Object() {varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndAgregarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarBDAsync( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Byte, _
                    ByVal varAccesoMartes As Byte, _
                    ByVal varAccesoMiercoles As Byte, _
                    ByVal varAccesoJueves As Byte, _
                    ByVal varAccesoViernes As Byte, _
                    ByVal varAccesoSabado As Byte, _
                    ByVal varAccesoDomingo As Byte, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String)
            Me.AgregarBDAsync(varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarBDAsync( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Byte, _
                    ByVal varAccesoMartes As Byte, _
                    ByVal varAccesoMiercoles As Byte, _
                    ByVal varAccesoJueves As Byte, _
                    ByVal varAccesoViernes As Byte, _
                    ByVal varAccesoSabado As Byte, _
                    ByVal varAccesoDomingo As Byte, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String, _
                    ByVal userState As Object)
            If (Me.AgregarBDOperationCompleted Is Nothing) Then
                Me.AgregarBDOperationCompleted = AddressOf Me.OnAgregarBDOperationCompleted
            End If
            Me.InvokeAsync("AgregarBD", New Object() {varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP}, Me.AgregarBDOperationCompleted, userState)
        End Sub

        Private Sub OnAgregarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/BorrarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub BorrarBD(ByVal varCodigoHorario As Double, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("BorrarBD", New Object() {varCodigoHorario, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginBorrarBD(ByVal varCodigoHorario As Double, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorrarBD", New Object() {varCodigoHorario, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndBorrarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarBDAsync(ByVal varCodigoHorario As Double, ByVal usuario As String, ByVal IP As String)
            Me.BorrarBDAsync(varCodigoHorario, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarBDAsync(ByVal varCodigoHorario As Double, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.BorrarBDOperationCompleted Is Nothing) Then
                Me.BorrarBDOperationCompleted = AddressOf Me.OnBorrarBDOperationCompleted
            End If
            Me.InvokeAsync("BorrarBD", New Object() {varCodigoHorario, usuario, IP}, Me.BorrarBDOperationCompleted, userState)
        End Sub

        Private Sub OnBorrarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorrarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorrarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ModificarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub ModificarBD( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Byte, _
                    ByVal varAccesoMartes As Byte, _
                    ByVal varAccesoMiercoles As Byte, _
                    ByVal varAccesoJueves As Byte, _
                    ByVal varAccesoViernes As Byte, _
                    ByVal varAccesoSabado As Byte, _
                    ByVal varAccesoDomingo As Byte, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String)
            Me.Invoke("ModificarBD", New Object() {varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginModificarBD( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Byte, _
                    ByVal varAccesoMartes As Byte, _
                    ByVal varAccesoMiercoles As Byte, _
                    ByVal varAccesoJueves As Byte, _
                    ByVal varAccesoViernes As Byte, _
                    ByVal varAccesoSabado As Byte, _
                    ByVal varAccesoDomingo As Byte, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String, _
                    ByVal callback As System.AsyncCallback, _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBD", New Object() {varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndModificarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModificarBDAsync( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Byte, _
                    ByVal varAccesoMartes As Byte, _
                    ByVal varAccesoMiercoles As Byte, _
                    ByVal varAccesoJueves As Byte, _
                    ByVal varAccesoViernes As Byte, _
                    ByVal varAccesoSabado As Byte, _
                    ByVal varAccesoDomingo As Byte, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String)
            Me.ModificarBDAsync(varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModificarBDAsync( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Byte, _
                    ByVal varAccesoMartes As Byte, _
                    ByVal varAccesoMiercoles As Byte, _
                    ByVal varAccesoJueves As Byte, _
                    ByVal varAccesoViernes As Byte, _
                    ByVal varAccesoSabado As Byte, _
                    ByVal varAccesoDomingo As Byte, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String, _
                    ByVal userState As Object)
            If (Me.ModificarBDOperationCompleted Is Nothing) Then
                Me.ModificarBDOperationCompleted = AddressOf Me.OnModificarBDOperationCompleted
            End If
            Me.InvokeAsync("ModificarBD", New Object() {varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP}, Me.ModificarBDOperationCompleted, userState)
        End Sub

        Private Sub OnModificarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerRegistroBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub TraerRegistroBD( _
                    ByVal varCodigoHorario As Double, _
                    ByRef varDescripcionHorario As String, _
                    ByRef varAccesoLunes As Boolean, _
                    ByRef varAccesoMartes As Boolean, _
                    ByRef varAccesoMiercoles As Boolean, _
                    ByRef varAccesoJueves As Boolean, _
                    ByRef varAccesoViernes As Boolean, _
                    ByRef varAccesoSabado As Boolean, _
                    ByRef varAccesoDomingo As Boolean, _
                    ByRef varLunesHoraDesde As Date, _
                    ByRef varLunesHoraHasta As Date, _
                    ByRef varMartesHoraDesde As Date, _
                    ByRef varMartesHoraHasta As Date, _
                    ByRef varMiercolesHoraDesde As Date, _
                    ByRef varMiercolesHoraHasta As Date, _
                    ByRef varJuevesHoraDesde As Date, _
                    ByRef varJuevesHoraHasta As Date, _
                    ByRef varViernesHoraDesde As Date, _
                    ByRef varViernesHoraHasta As Date, _
                    ByRef varSabadoHoraDesde As Date, _
                    ByRef varSabadoHoraHasta As Date, _
                    ByRef varDomingoHoraDesde As Date, _
                    ByRef varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String)
            Dim results() As Object = Me.Invoke("TraerRegistroBD", New Object() {varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP})
            varDescripcionHorario = CType(results(0), String)
            varAccesoLunes = CType(results(1), Boolean)
            varAccesoMartes = CType(results(2), Boolean)
            varAccesoMiercoles = CType(results(3), Boolean)
            varAccesoJueves = CType(results(4), Boolean)
            varAccesoViernes = CType(results(5), Boolean)
            varAccesoSabado = CType(results(6), Boolean)
            varAccesoDomingo = CType(results(7), Boolean)
            varLunesHoraDesde = CType(results(8), Date)
            varLunesHoraHasta = CType(results(9), Date)
            varMartesHoraDesde = CType(results(10), Date)
            varMartesHoraHasta = CType(results(11), Date)
            varMiercolesHoraDesde = CType(results(12), Date)
            varMiercolesHoraHasta = CType(results(13), Date)
            varJuevesHoraDesde = CType(results(14), Date)
            varJuevesHoraHasta = CType(results(15), Date)
            varViernesHoraDesde = CType(results(16), Date)
            varViernesHoraHasta = CType(results(17), Date)
            varSabadoHoraDesde = CType(results(18), Date)
            varSabadoHoraHasta = CType(results(19), Date)
            varDomingoHoraDesde = CType(results(20), Date)
            varDomingoHoraHasta = CType(results(21), Date)
        End Sub

        '''<remarks/>
        Public Function BeginTraerRegistroBD( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Boolean, _
                    ByVal varAccesoMartes As Boolean, _
                    ByVal varAccesoMiercoles As Boolean, _
                    ByVal varAccesoJueves As Boolean, _
                    ByVal varAccesoViernes As Boolean, _
                    ByVal varAccesoSabado As Boolean, _
                    ByVal varAccesoDomingo As Boolean, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String, _
                    ByVal callback As System.AsyncCallback, _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerRegistroBD", New Object() {varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndTraerRegistroBD( _
                    ByVal asyncResult As System.IAsyncResult, _
                    ByRef varDescripcionHorario As String, _
                    ByRef varAccesoLunes As Boolean, _
                    ByRef varAccesoMartes As Boolean, _
                    ByRef varAccesoMiercoles As Boolean, _
                    ByRef varAccesoJueves As Boolean, _
                    ByRef varAccesoViernes As Boolean, _
                    ByRef varAccesoSabado As Boolean, _
                    ByRef varAccesoDomingo As Boolean, _
                    ByRef varLunesHoraDesde As Date, _
                    ByRef varLunesHoraHasta As Date, _
                    ByRef varMartesHoraDesde As Date, _
                    ByRef varMartesHoraHasta As Date, _
                    ByRef varMiercolesHoraDesde As Date, _
                    ByRef varMiercolesHoraHasta As Date, _
                    ByRef varJuevesHoraDesde As Date, _
                    ByRef varJuevesHoraHasta As Date, _
                    ByRef varViernesHoraDesde As Date, _
                    ByRef varViernesHoraHasta As Date, _
                    ByRef varSabadoHoraDesde As Date, _
                    ByRef varSabadoHoraHasta As Date, _
                    ByRef varDomingoHoraDesde As Date, _
                    ByRef varDomingoHoraHasta As Date)
            Dim results() As Object = Me.EndInvoke(asyncResult)
            varDescripcionHorario = CType(results(0), String)
            varAccesoLunes = CType(results(1), Boolean)
            varAccesoMartes = CType(results(2), Boolean)
            varAccesoMiercoles = CType(results(3), Boolean)
            varAccesoJueves = CType(results(4), Boolean)
            varAccesoViernes = CType(results(5), Boolean)
            varAccesoSabado = CType(results(6), Boolean)
            varAccesoDomingo = CType(results(7), Boolean)
            varLunesHoraDesde = CType(results(8), Date)
            varLunesHoraHasta = CType(results(9), Date)
            varMartesHoraDesde = CType(results(10), Date)
            varMartesHoraHasta = CType(results(11), Date)
            varMiercolesHoraDesde = CType(results(12), Date)
            varMiercolesHoraHasta = CType(results(13), Date)
            varJuevesHoraDesde = CType(results(14), Date)
            varJuevesHoraHasta = CType(results(15), Date)
            varViernesHoraDesde = CType(results(16), Date)
            varViernesHoraHasta = CType(results(17), Date)
            varSabadoHoraDesde = CType(results(18), Date)
            varSabadoHoraHasta = CType(results(19), Date)
            varDomingoHoraDesde = CType(results(20), Date)
            varDomingoHoraHasta = CType(results(21), Date)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerRegistroBDAsync( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Boolean, _
                    ByVal varAccesoMartes As Boolean, _
                    ByVal varAccesoMiercoles As Boolean, _
                    ByVal varAccesoJueves As Boolean, _
                    ByVal varAccesoViernes As Boolean, _
                    ByVal varAccesoSabado As Boolean, _
                    ByVal varAccesoDomingo As Boolean, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String)
            Me.TraerRegistroBDAsync(varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerRegistroBDAsync( _
                    ByVal varCodigoHorario As Double, _
                    ByVal varDescripcionHorario As String, _
                    ByVal varAccesoLunes As Boolean, _
                    ByVal varAccesoMartes As Boolean, _
                    ByVal varAccesoMiercoles As Boolean, _
                    ByVal varAccesoJueves As Boolean, _
                    ByVal varAccesoViernes As Boolean, _
                    ByVal varAccesoSabado As Boolean, _
                    ByVal varAccesoDomingo As Boolean, _
                    ByVal varLunesHoraDesde As Date, _
                    ByVal varLunesHoraHasta As Date, _
                    ByVal varMartesHoraDesde As Date, _
                    ByVal varMartesHoraHasta As Date, _
                    ByVal varMiercolesHoraDesde As Date, _
                    ByVal varMiercolesHoraHasta As Date, _
                    ByVal varJuevesHoraDesde As Date, _
                    ByVal varJuevesHoraHasta As Date, _
                    ByVal varViernesHoraDesde As Date, _
                    ByVal varViernesHoraHasta As Date, _
                    ByVal varSabadoHoraDesde As Date, _
                    ByVal varSabadoHoraHasta As Date, _
                    ByVal varDomingoHoraDesde As Date, _
                    ByVal varDomingoHoraHasta As Date, _
                    ByVal usuario As String, _
                    ByVal IP As String, _
                    ByVal userState As Object)
            If (Me.TraerRegistroBDOperationCompleted Is Nothing) Then
                Me.TraerRegistroBDOperationCompleted = AddressOf Me.OnTraerRegistroBDOperationCompleted
            End If
            Me.InvokeAsync("TraerRegistroBD", New Object() {varCodigoHorario, varDescripcionHorario, varAccesoLunes, varAccesoMartes, varAccesoMiercoles, varAccesoJueves, varAccesoViernes, varAccesoSabado, varAccesoDomingo, varLunesHoraDesde, varLunesHoraHasta, varMartesHoraDesde, varMartesHoraHasta, varMiercolesHoraDesde, varMiercolesHoraHasta, varJuevesHoraDesde, varJuevesHoraHasta, varViernesHoraDesde, varViernesHoraHasta, varSabadoHoraDesde, varSabadoHoraHasta, varDomingoHoraDesde, varDomingoHoraHasta, usuario, IP}, Me.TraerRegistroBDOperationCompleted, userState)
        End Sub

        Private Sub OnTraerRegistroBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerRegistroBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerRegistroBDCompleted(Me, New TraerRegistroBDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerListaTotalBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerListaTotalBD(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TraerListaTotalBD", New Object() {ListaCondiciones, MaxRegistros, usuario, IP})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginTraerListaTotalBD(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerListaTotalBD", New Object() {ListaCondiciones, MaxRegistros, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerListaTotalBD(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerListaTotalBDAsync(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String)
            Me.TraerListaTotalBDAsync(ListaCondiciones, MaxRegistros, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerListaTotalBDAsync(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerListaTotalBDOperationCompleted Is Nothing) Then
                Me.TraerListaTotalBDOperationCompleted = AddressOf Me.OnTraerListaTotalBDOperationCompleted
            End If
            Me.InvokeAsync("TraerListaTotalBD", New Object() {ListaCondiciones, MaxRegistros, usuario, IP}, Me.TraerListaTotalBDOperationCompleted, userState)
        End Sub

        Private Sub OnTraerListaTotalBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerListaTotalBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerListaTotalBDCompleted(Me, New TraerListaTotalBDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class


    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AgregarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub BorrarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ModificarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerRegistroBDCompletedEventHandler(ByVal sender As Object, ByVal e As TraerRegistroBDCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerRegistroBDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property varDescripcionHorario() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varAccesoLunes() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(1), Boolean)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varAccesoMartes() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(2), Boolean)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varAccesoMiercoles() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(3), Boolean)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varAccesoJueves() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(4), Boolean)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varAccesoViernes() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(5), Boolean)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varAccesoSabado() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(6), Boolean)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varAccesoDomingo() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(7), Boolean)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varLunesHoraDesde() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(8), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varLunesHoraHasta() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(9), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varMartesHoraDesde() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(10), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varMartesHoraHasta() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(11), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varMiercolesHoraDesde() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(12), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varMiercolesHoraHasta() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(13), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varJuevesHoraDesde() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(14), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varJuevesHoraHasta() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(15), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varViernesHoraDesde() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(16), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varViernesHoraHasta() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(17), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varSabadoHoraDesde() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(18), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varSabadoHoraHasta() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(19), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varDomingoHoraDesde() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(20), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property varDomingoHoraHasta() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(21), Date)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerListaTotalBDCompletedEventHandler(ByVal sender As Object, ByVal e As TraerListaTotalBDCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerListaTotalBDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace