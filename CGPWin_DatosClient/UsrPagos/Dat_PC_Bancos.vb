'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.4952
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Imports System.Configuration

'
'This source code was auto-generated by wsdl, Version=2.0.50727.3038.
'

Namespace UsrPagos.Dat_PC_Bancos



    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="Dat_PC_BancosSoap", [Namespace]:="http://www.prosoft.cr/")> _
    Partial Public Class Dat_PC_Bancos
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private AgregarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private BorrarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private ModificarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerRegistroBDOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerListaTotalBDOperationCompleted As System.Threading.SendOrPostCallback

        Private ExisteOperationCompleted As System.Threading.SendOrPostCallback

        Public Sub New()
            MyBase.New()
            Me.Url = ConfigurationManager.AppSettings(Constantes.ServidorDatos) + "UsrPagos/Dat_PC_Bancos.asmx"
        End Sub

        '''<remarks/>
        Public Event AgregarBDCompleted As AgregarBDCompletedEventHandler

        '''<remarks/>
        Public Event BorrarBDCompleted As BorrarBDCompletedEventHandler

        '''<remarks/>
        Public Event ModificarBDCompleted As ModificarBDCompletedEventHandler

        '''<remarks/>
        Public Event TraerRegistroBDCompleted As TraerRegistroBDCompletedEventHandler

        '''<remarks/>
        Public Event TraerListaTotalBDCompleted As TraerListaTotalBDCompletedEventHandler

        '''<remarks/>
        Public Event ExisteCompleted As ExisteCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AgregarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub AgregarBD(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("AgregarBD", New Object() {v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginAgregarBD(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarBD", New Object() {v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndAgregarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarBDAsync(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String)
            Me.AgregarBDAsync(v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarBDAsync(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.AgregarBDOperationCompleted Is Nothing) Then
                Me.AgregarBDOperationCompleted = AddressOf Me.OnAgregarBDOperationCompleted
            End If
            Me.InvokeAsync("AgregarBD", New Object() {v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP}, Me.AgregarBDOperationCompleted, userState)
        End Sub

        Private Sub OnAgregarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/BorrarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub BorrarBD(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("BorrarBD", New Object() {v_CodigoBanco, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginBorrarBD(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorrarBD", New Object() {v_CodigoBanco, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndBorrarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarBDAsync(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String)
            Me.BorrarBDAsync(v_CodigoBanco, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarBDAsync(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.BorrarBDOperationCompleted Is Nothing) Then
                Me.BorrarBDOperationCompleted = AddressOf Me.OnBorrarBDOperationCompleted
            End If
            Me.InvokeAsync("BorrarBD", New Object() {v_CodigoBanco, usuario, IP}, Me.BorrarBDOperationCompleted, userState)
        End Sub

        Private Sub OnBorrarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorrarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorrarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ModificarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub ModificarBD(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("ModificarBD", New Object() {v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginModificarBD(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBD", New Object() {v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndModificarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModificarBDAsync(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String)
            Me.ModificarBDAsync(v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModificarBDAsync(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ModificarBDOperationCompleted Is Nothing) Then
                Me.ModificarBDOperationCompleted = AddressOf Me.OnModificarBDOperationCompleted
            End If
            Me.InvokeAsync("ModificarBD", New Object() {v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP}, Me.ModificarBDOperationCompleted, userState)
        End Sub

        Private Sub OnModificarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerRegistroBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub TraerRegistroBD(ByVal v_CodigoBanco As Integer, ByRef v_NombreBanco As String, ByRef v_AbreviaturaBanco As String, ByRef v_Estado As String, ByRef v_AyudaDomi As String, ByRef v_AyudaTran As String, ByVal usuario As String, ByVal IP As String)
            Dim results() As Object = Me.Invoke("TraerRegistroBD", New Object() {v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP})
            v_NombreBanco = CType(results(0), String)
            v_AbreviaturaBanco = CType(results(1), String)
            v_Estado = CType(results(2), String)
            v_AyudaDomi = CType(results(3), String)
            v_AyudaTran = CType(results(4), String)
        End Sub

        '''<remarks/>
        Public Function BeginTraerRegistroBD(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerRegistroBD", New Object() {v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndTraerRegistroBD(ByVal asyncResult As System.IAsyncResult, ByRef v_NombreBanco As String, ByRef v_AbreviaturaBanco As String, ByRef v_Estado As String, ByRef v_AyudaDomi As String, ByRef v_AyudaTran As String)
            Dim results() As Object = Me.EndInvoke(asyncResult)
            v_NombreBanco = CType(results(0), String)
            v_AbreviaturaBanco = CType(results(1), String)
            v_Estado = CType(results(2), String)
            v_AyudaDomi = CType(results(3), String)
            v_AyudaTran = CType(results(4), String)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerRegistroBDAsync(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String)
            Me.TraerRegistroBDAsync(v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerRegistroBDAsync(ByVal v_CodigoBanco As Integer, ByVal v_NombreBanco As String, ByVal v_AbreviaturaBanco As String, ByVal v_Estado As String, ByVal v_AyudaDomi As String, ByVal v_AyudaTran As String, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerRegistroBDOperationCompleted Is Nothing) Then
                Me.TraerRegistroBDOperationCompleted = AddressOf Me.OnTraerRegistroBDOperationCompleted
            End If
            Me.InvokeAsync("TraerRegistroBD", New Object() {v_CodigoBanco, v_NombreBanco, v_AbreviaturaBanco, v_Estado, v_AyudaDomi, v_AyudaTran, usuario, IP}, Me.TraerRegistroBDOperationCompleted, userState)
        End Sub

        Private Sub OnTraerRegistroBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerRegistroBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerRegistroBDCompleted(Me, New TraerRegistroBDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerListaTotalBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerListaTotalBD(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TraerListaTotalBD", New Object() {ListaCondiciones, MaxRegistros, usuario, IP})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginTraerListaTotalBD(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerListaTotalBD", New Object() {ListaCondiciones, MaxRegistros, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerListaTotalBD(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerListaTotalBDAsync(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String)
            Me.TraerListaTotalBDAsync(ListaCondiciones, MaxRegistros, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerListaTotalBDAsync(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerListaTotalBDOperationCompleted Is Nothing) Then
                Me.TraerListaTotalBDOperationCompleted = AddressOf Me.OnTraerListaTotalBDOperationCompleted
            End If
            Me.InvokeAsync("TraerListaTotalBD", New Object() {ListaCondiciones, MaxRegistros, usuario, IP}, Me.TraerListaTotalBDOperationCompleted, userState)
        End Sub

        Private Sub OnTraerListaTotalBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerListaTotalBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerListaTotalBDCompleted(Me, New TraerListaTotalBDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/Existe", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function Existe(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByRef v_NombreBanco As String) As Boolean
            Dim results() As Object = Me.Invoke("Existe", New Object() {v_CodigoBanco, usuario, IP, v_NombreBanco})
            v_NombreBanco = CType(results(1), String)
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Function BeginExiste(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal v_NombreBanco As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Existe", New Object() {v_CodigoBanco, usuario, IP, v_NombreBanco}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndExiste(ByVal asyncResult As System.IAsyncResult, ByRef v_NombreBanco As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            v_NombreBanco = CType(results(1), String)
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Overloads Sub ExisteAsync(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal v_NombreBanco As String)
            Me.ExisteAsync(v_CodigoBanco, usuario, IP, v_NombreBanco, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ExisteAsync(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal v_NombreBanco As String, ByVal userState As Object)
            If (Me.ExisteOperationCompleted Is Nothing) Then
                Me.ExisteOperationCompleted = AddressOf Me.OnExisteOperationCompleted
            End If
            Me.InvokeAsync("Existe", New Object() {v_CodigoBanco, usuario, IP, v_NombreBanco}, Me.ExisteOperationCompleted, userState)
        End Sub

        Private Sub OnExisteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExisteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExisteCompleted(Me, New ExisteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AgregarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub BorrarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ModificarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerRegistroBDCompletedEventHandler(ByVal sender As Object, ByVal e As TraerRegistroBDCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerRegistroBDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property v_NombreBanco() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_AbreviaturaBanco() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(1), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_Estado() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(2), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_AyudaDomi() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(3), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_AyudaTran() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(4), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerListaTotalBDCompletedEventHandler(ByVal sender As Object, ByVal e As TraerListaTotalBDCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerListaTotalBDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ExisteCompletedEventHandler(ByVal sender As Object, ByVal e As ExisteCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ExisteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Boolean)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_NombreBanco() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(1), String)
            End Get
        End Property
    End Class
End Namespace