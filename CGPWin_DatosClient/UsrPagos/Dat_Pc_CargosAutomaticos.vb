'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.3603
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Imports System.Configuration

'
'This source code was auto-generated by wsdl, Version=2.0.50727.3038.
'

Namespace UsrPagos.Dat_Pc_CargosAutomaticos


    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="Dat_Pc_CargosAutomaticosSoap", [Namespace]:="http://www.prosoft.cr/")> _
    Partial Public Class Dat_Pc_CargosAutomaticos
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private GuardaCargoAutomaticoOperationCompleted As System.Threading.SendOrPostCallback

        Private InhabilidarCargoAutomaticoOperationCompleted As System.Threading.SendOrPostCallback

        Private ExisteCargoOperationCompleted As System.Threading.SendOrPostCallback

        Private LeeCargosAutomaticosPorPersonaOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = ConfigurationManager.AppSettings(Constantes.ServidorDatos) + "UsrPagos/Dat_Pc_CargosAutomaticos.asmx"
        End Sub

        '''<remarks/>
        Public Event GuardaCargoAutomaticoCompleted As GuardaCargoAutomaticoCompletedEventHandler

        '''<remarks/>
        Public Event InhabilidarCargoAutomaticoCompleted As InhabilidarCargoAutomaticoCompletedEventHandler

        '''<remarks/>
        Public Event ExisteCargoCompleted As ExisteCargoCompletedEventHandler

        '''<remarks/>
        Public Event LeeCargosAutomaticosPorPersonaCompleted As LeeCargosAutomaticosPorPersonaCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/GuardaCargoAutomatico", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub GuardaCargoAutomatico(ByVal idCargosAutomaticos As Integer, ByVal CuentaCliente As String, ByVal TipoServicio As Integer, ByVal NumeroServicio As String, ByVal DescripcionServicio As String, ByVal PagoCuota As String, ByVal PagoMin As String, ByVal PagoContado As String, ByVal PagoMonto As String, ByVal Moneda As Integer, ByVal RequiereDiaCobro As String, ByVal Monto As Decimal, ByVal DiaCobro As Integer)
            Me.Invoke("GuardaCargoAutomatico", New Object() {idCargosAutomaticos, CuentaCliente, TipoServicio, NumeroServicio, DescripcionServicio, PagoCuota, PagoMin, PagoContado, PagoMonto, Moneda, RequiereDiaCobro, Monto, DiaCobro})
        End Sub

        '''<remarks/>
        Public Function BeginGuardaCargoAutomatico(ByVal idCargosAutomaticos As Integer, ByVal CuentaCliente As String, ByVal TipoServicio As Integer, ByVal NumeroServicio As String, ByVal DescripcionServicio As String, ByVal PagoCuota As String, ByVal PagoMin As String, ByVal PagoContado As String, ByVal PagoMonto As String, ByVal Moneda As Integer, ByVal RequiereDiaCobro As String, ByVal Monto As Decimal, ByVal DiaCobro As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GuardaCargoAutomatico", New Object() {idCargosAutomaticos, CuentaCliente, TipoServicio, NumeroServicio, DescripcionServicio, PagoCuota, PagoMin, PagoContado, PagoMonto, Moneda, RequiereDiaCobro, Monto, DiaCobro}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndGuardaCargoAutomatico(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub GuardaCargoAutomaticoAsync(ByVal idCargosAutomaticos As Integer, ByVal CuentaCliente As String, ByVal TipoServicio As Integer, ByVal NumeroServicio As String, ByVal DescripcionServicio As String, ByVal PagoCuota As String, ByVal PagoMin As String, ByVal PagoContado As String, ByVal PagoMonto As String, ByVal Moneda As Integer, ByVal RequiereDiaCobro As String, ByVal Monto As Decimal, ByVal DiaCobro As Integer)
            Me.GuardaCargoAutomaticoAsync(idCargosAutomaticos, CuentaCliente, TipoServicio, NumeroServicio, DescripcionServicio, PagoCuota, PagoMin, PagoContado, PagoMonto, Moneda, RequiereDiaCobro, Monto, DiaCobro, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub GuardaCargoAutomaticoAsync(ByVal idCargosAutomaticos As Integer, ByVal CuentaCliente As String, ByVal TipoServicio As Integer, ByVal NumeroServicio As String, ByVal DescripcionServicio As String, ByVal PagoCuota As String, ByVal PagoMin As String, ByVal PagoContado As String, ByVal PagoMonto As String, ByVal Moneda As Integer, ByVal RequiereDiaCobro As String, ByVal Monto As Decimal, ByVal DiaCobro As Integer, ByVal userState As Object)
            If (Me.GuardaCargoAutomaticoOperationCompleted Is Nothing) Then
                Me.GuardaCargoAutomaticoOperationCompleted = AddressOf Me.OnGuardaCargoAutomaticoOperationCompleted
            End If
            Me.InvokeAsync("GuardaCargoAutomatico", New Object() {idCargosAutomaticos, CuentaCliente, TipoServicio, NumeroServicio, DescripcionServicio, PagoCuota, PagoMin, PagoContado, PagoMonto, Moneda, RequiereDiaCobro, Monto, DiaCobro}, Me.GuardaCargoAutomaticoOperationCompleted, userState)
        End Sub

        Private Sub OnGuardaCargoAutomaticoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GuardaCargoAutomaticoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GuardaCargoAutomaticoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/InhabilidarCargoAutomatico", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub InhabilidarCargoAutomatico(ByVal idCargosAutomaticos As Integer)
            Me.Invoke("InhabilidarCargoAutomatico", New Object() {idCargosAutomaticos})
        End Sub

        '''<remarks/>
        Public Function BeginInhabilidarCargoAutomatico(ByVal idCargosAutomaticos As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InhabilidarCargoAutomatico", New Object() {idCargosAutomaticos}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndInhabilidarCargoAutomatico(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub InhabilidarCargoAutomaticoAsync(ByVal idCargosAutomaticos As Integer)
            Me.InhabilidarCargoAutomaticoAsync(idCargosAutomaticos, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub InhabilidarCargoAutomaticoAsync(ByVal idCargosAutomaticos As Integer, ByVal userState As Object)
            If (Me.InhabilidarCargoAutomaticoOperationCompleted Is Nothing) Then
                Me.InhabilidarCargoAutomaticoOperationCompleted = AddressOf Me.OnInhabilidarCargoAutomaticoOperationCompleted
            End If
            Me.InvokeAsync("InhabilidarCargoAutomatico", New Object() {idCargosAutomaticos}, Me.InhabilidarCargoAutomaticoOperationCompleted, userState)
        End Sub

        Private Sub OnInhabilidarCargoAutomaticoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InhabilidarCargoAutomaticoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InhabilidarCargoAutomaticoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ExisteCargo", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ExisteCargo(ByVal CuentaCliente As String, ByVal TipoServicio As Integer, ByVal NumeroServicio As String) As Integer
            Dim results() As Object = Me.Invoke("ExisteCargo", New Object() {CuentaCliente, TipoServicio, NumeroServicio})
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Function BeginExisteCargo(ByVal CuentaCliente As String, ByVal TipoServicio As Integer, ByVal NumeroServicio As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ExisteCargo", New Object() {CuentaCliente, TipoServicio, NumeroServicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndExisteCargo(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Overloads Sub ExisteCargoAsync(ByVal CuentaCliente As String, ByVal TipoServicio As Integer, ByVal NumeroServicio As String)
            Me.ExisteCargoAsync(CuentaCliente, TipoServicio, NumeroServicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ExisteCargoAsync(ByVal CuentaCliente As String, ByVal TipoServicio As Integer, ByVal NumeroServicio As String, ByVal userState As Object)
            If (Me.ExisteCargoOperationCompleted Is Nothing) Then
                Me.ExisteCargoOperationCompleted = AddressOf Me.OnExisteCargoOperationCompleted
            End If
            Me.InvokeAsync("ExisteCargo", New Object() {CuentaCliente, TipoServicio, NumeroServicio}, Me.ExisteCargoOperationCompleted, userState)
        End Sub

        Private Sub OnExisteCargoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExisteCargoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExisteCargoCompleted(Me, New ExisteCargoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/LeeCargosAutomaticosPorPersona", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function LeeCargosAutomaticosPorPersona(ByVal CuentaCliente As String, ByVal Estado As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("LeeCargosAutomaticosPorPersona", New Object() {CuentaCliente, Estado})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginLeeCargosAutomaticosPorPersona(ByVal CuentaCliente As String, ByVal Estado As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LeeCargosAutomaticosPorPersona", New Object() {CuentaCliente, Estado}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndLeeCargosAutomaticosPorPersona(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub LeeCargosAutomaticosPorPersonaAsync(ByVal CuentaCliente As String, ByVal Estado As Integer)
            Me.LeeCargosAutomaticosPorPersonaAsync(CuentaCliente, Estado, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub LeeCargosAutomaticosPorPersonaAsync(ByVal CuentaCliente As String, ByVal Estado As Integer, ByVal userState As Object)
            If (Me.LeeCargosAutomaticosPorPersonaOperationCompleted Is Nothing) Then
                Me.LeeCargosAutomaticosPorPersonaOperationCompleted = AddressOf Me.OnLeeCargosAutomaticosPorPersonaOperationCompleted
            End If
            Me.InvokeAsync("LeeCargosAutomaticosPorPersona", New Object() {CuentaCliente, Estado}, Me.LeeCargosAutomaticosPorPersonaOperationCompleted, userState)
        End Sub

        Private Sub OnLeeCargosAutomaticosPorPersonaOperationCompleted(ByVal arg As Object)
            If (Not (Me.LeeCargosAutomaticosPorPersonaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LeeCargosAutomaticosPorPersonaCompleted(Me, New LeeCargosAutomaticosPorPersonaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub GuardaCargoAutomaticoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub InhabilidarCargoAutomaticoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ExisteCargoCompletedEventHandler(ByVal sender As Object, ByVal e As ExisteCargoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ExisteCargoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub LeeCargosAutomaticosPorPersonaCompletedEventHandler(ByVal sender As Object, ByVal e As LeeCargosAutomaticosPorPersonaCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class LeeCargosAutomaticosPorPersonaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
