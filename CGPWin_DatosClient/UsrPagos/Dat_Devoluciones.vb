'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3082
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.50727.3038.
'
Namespace UsrPagos.Dat_Devoluciones

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="Dat_DevolucionesSoap", [Namespace]:="http://www.prosoft.cr/")> _
    Partial Public Class Dat_Devoluciones
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private InicializarOperationCompleted As System.Threading.SendOrPostCallback

        Private InicializarDevolucionesOperationCompleted As System.Threading.SendOrPostCallback

        Private InicializarBancosContOperationCompleted As System.Threading.SendOrPostCallback

        Private AgregarBancoAContingenciaOperationCompleted As System.Threading.SendOrPostCallback

        Private BorrarBancoDeContingenciaOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerListaBancosContOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerListaDevolucionesTranOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerListaDevolucionesDomicOperationCompleted As System.Threading.SendOrPostCallback

        Private TotalDomiEnTramiteOperationCompleted As System.Threading.SendOrPostCallback

        Private ExistenPropuestasPendientesOperationCompleted As System.Threading.SendOrPostCallback

        Private PropuestasPendientesValidaOperationCompleted As System.Threading.SendOrPostCallback

        Private AgregarDevolucionTmpOperationCompleted As System.Threading.SendOrPostCallback

        Private BorrarDevolucionTmpOperationCompleted As System.Threading.SendOrPostCallback

        Private ExisteTranEnPropuestaOperationCompleted As System.Threading.SendOrPostCallback

        Private AplicaDevolucionesSinpeOperationCompleted As System.Threading.SendOrPostCallback

        Private AplicaDevolucionesDomicSinpeOperationCompleted As System.Threading.SendOrPostCallback

        Private AplicaDevolucionesOtrosOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = System.Configuration.ConfigurationManager.AppSettings(Constantes.ServidorDatos) + "UsrPagos/Dat_Devoluciones.asmx"
        End Sub

        '''<remarks/>
        Public Event InicializarCompleted As InicializarCompletedEventHandler

        '''<remarks/>
        Public Event InicializarDevolucionesCompleted As InicializarDevolucionesCompletedEventHandler

        '''<remarks/>
        Public Event InicializarBancosContCompleted As InicializarBancosContCompletedEventHandler

        '''<remarks/>
        Public Event AgregarBancoAContingenciaCompleted As AgregarBancoAContingenciaCompletedEventHandler

        '''<remarks/>
        Public Event BorrarBancoDeContingenciaCompleted As BorrarBancoDeContingenciaCompletedEventHandler

        '''<remarks/>
        Public Event TraerListaBancosContCompleted As TraerListaBancosContCompletedEventHandler

        '''<remarks/>
        Public Event TraerListaDevolucionesTranCompleted As TraerListaDevolucionesTranCompletedEventHandler

        '''<remarks/>
        Public Event TraerListaDevolucionesDomicCompleted As TraerListaDevolucionesDomicCompletedEventHandler

        '''<remarks/>
        Public Event TotalDomiEnTramiteCompleted As TotalDomiEnTramiteCompletedEventHandler

        '''<remarks/>
        Public Event ExistenPropuestasPendientesCompleted As ExistenPropuestasPendientesCompletedEventHandler

        '''<remarks/>
        Public Event PropuestasPendientesValidaCompleted As PropuestasPendientesValidaCompletedEventHandler

        '''<remarks/>
        Public Event AgregarDevolucionTmpCompleted As AgregarDevolucionTmpCompletedEventHandler

        '''<remarks/>
        Public Event BorrarDevolucionTmpCompleted As BorrarDevolucionTmpCompletedEventHandler

        '''<remarks/>
        Public Event ExisteTranEnPropuestaCompleted As ExisteTranEnPropuestaCompletedEventHandler

        '''<remarks/>
        Public Event AplicaDevolucionesSinpeCompleted As AplicaDevolucionesSinpeCompletedEventHandler

        '''<remarks/>
        Public Event AplicaDevolucionesDomicSinpeCompleted As AplicaDevolucionesDomicSinpeCompletedEventHandler

        '''<remarks/>
        Public Event AplicaDevolucionesOtrosCompleted As AplicaDevolucionesOtrosCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/Inicializar", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub Inicializar(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.Invoke("Inicializar", New Object() {usuario, IP, servicio})
        End Sub

        '''<remarks/>
        Public Function BeginInicializar(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Inicializar", New Object() {usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndInicializar(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub InicializarAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.InicializarAsync(usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub InicializarAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.InicializarOperationCompleted Is Nothing) Then
                Me.InicializarOperationCompleted = AddressOf Me.OnInicializarOperationCompleted
            End If
            Me.InvokeAsync("Inicializar", New Object() {usuario, IP, servicio}, Me.InicializarOperationCompleted, userState)
        End Sub

        Private Sub OnInicializarOperationCompleted(ByVal arg As Object)
            If (Not (Me.InicializarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InicializarCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/InicializarDevoluciones", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub InicializarDevoluciones(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.Invoke("InicializarDevoluciones", New Object() {usuario, IP, servicio})
        End Sub

        '''<remarks/>
        Public Function BeginInicializarDevoluciones(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InicializarDevoluciones", New Object() {usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndInicializarDevoluciones(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub InicializarDevolucionesAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.InicializarDevolucionesAsync(usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub InicializarDevolucionesAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.InicializarDevolucionesOperationCompleted Is Nothing) Then
                Me.InicializarDevolucionesOperationCompleted = AddressOf Me.OnInicializarDevolucionesOperationCompleted
            End If
            Me.InvokeAsync("InicializarDevoluciones", New Object() {usuario, IP, servicio}, Me.InicializarDevolucionesOperationCompleted, userState)
        End Sub

        Private Sub OnInicializarDevolucionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.InicializarDevolucionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InicializarDevolucionesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/InicializarBancosCont", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub InicializarBancosCont(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.Invoke("InicializarBancosCont", New Object() {usuario, IP, servicio})
        End Sub

        '''<remarks/>
        Public Function BeginInicializarBancosCont(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InicializarBancosCont", New Object() {usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndInicializarBancosCont(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub InicializarBancosContAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.InicializarBancosContAsync(usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub InicializarBancosContAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.InicializarBancosContOperationCompleted Is Nothing) Then
                Me.InicializarBancosContOperationCompleted = AddressOf Me.OnInicializarBancosContOperationCompleted
            End If
            Me.InvokeAsync("InicializarBancosCont", New Object() {usuario, IP, servicio}, Me.InicializarBancosContOperationCompleted, userState)
        End Sub

        Private Sub OnInicializarBancosContOperationCompleted(ByVal arg As Object)
            If (Not (Me.InicializarBancosContCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InicializarBancosContCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AgregarBancoAContingencia", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub AgregarBancoAContingencia(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.Invoke("AgregarBancoAContingencia", New Object() {v_CodigoBanco, usuario, IP, servicio})
        End Sub

        '''<remarks/>
        Public Function BeginAgregarBancoAContingencia(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarBancoAContingencia", New Object() {v_CodigoBanco, usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndAgregarBancoAContingencia(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarBancoAContingenciaAsync(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.AgregarBancoAContingenciaAsync(v_CodigoBanco, usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarBancoAContingenciaAsync(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.AgregarBancoAContingenciaOperationCompleted Is Nothing) Then
                Me.AgregarBancoAContingenciaOperationCompleted = AddressOf Me.OnAgregarBancoAContingenciaOperationCompleted
            End If
            Me.InvokeAsync("AgregarBancoAContingencia", New Object() {v_CodigoBanco, usuario, IP, servicio}, Me.AgregarBancoAContingenciaOperationCompleted, userState)
        End Sub

        Private Sub OnAgregarBancoAContingenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregarBancoAContingenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregarBancoAContingenciaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/BorrarBancoDeContingencia", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub BorrarBancoDeContingencia(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.Invoke("BorrarBancoDeContingencia", New Object() {v_CodigoBanco, usuario, IP, servicio})
        End Sub

        '''<remarks/>
        Public Function BeginBorrarBancoDeContingencia(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorrarBancoDeContingencia", New Object() {v_CodigoBanco, usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndBorrarBancoDeContingencia(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarBancoDeContingenciaAsync(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.BorrarBancoDeContingenciaAsync(v_CodigoBanco, usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarBancoDeContingenciaAsync(ByVal v_CodigoBanco As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.BorrarBancoDeContingenciaOperationCompleted Is Nothing) Then
                Me.BorrarBancoDeContingenciaOperationCompleted = AddressOf Me.OnBorrarBancoDeContingenciaOperationCompleted
            End If
            Me.InvokeAsync("BorrarBancoDeContingencia", New Object() {v_CodigoBanco, usuario, IP, servicio}, Me.BorrarBancoDeContingenciaOperationCompleted, userState)
        End Sub

        Private Sub OnBorrarBancoDeContingenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorrarBancoDeContingenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorrarBancoDeContingenciaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerListaBancosCont", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerListaBancosCont(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TraerListaBancosCont", New Object() {usuario, IP, servicio})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginTraerListaBancosCont(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerListaBancosCont", New Object() {usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerListaBancosCont(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerListaBancosContAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.TraerListaBancosContAsync(usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerListaBancosContAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.TraerListaBancosContOperationCompleted Is Nothing) Then
                Me.TraerListaBancosContOperationCompleted = AddressOf Me.OnTraerListaBancosContOperationCompleted
            End If
            Me.InvokeAsync("TraerListaBancosCont", New Object() {usuario, IP, servicio}, Me.TraerListaBancosContOperationCompleted, userState)
        End Sub

        Private Sub OnTraerListaBancosContOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerListaBancosContCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerListaBancosContCompleted(Me, New TraerListaBancosContCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerListaDevolucionesTran", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerListaDevolucionesTran(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TraerListaDevolucionesTran", New Object() {usuario, IP, servicio})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginTraerListaDevolucionesTran(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerListaDevolucionesTran", New Object() {usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerListaDevolucionesTran(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerListaDevolucionesTranAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.TraerListaDevolucionesTranAsync(usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerListaDevolucionesTranAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.TraerListaDevolucionesTranOperationCompleted Is Nothing) Then
                Me.TraerListaDevolucionesTranOperationCompleted = AddressOf Me.OnTraerListaDevolucionesTranOperationCompleted
            End If
            Me.InvokeAsync("TraerListaDevolucionesTran", New Object() {usuario, IP, servicio}, Me.TraerListaDevolucionesTranOperationCompleted, userState)
        End Sub

        Private Sub OnTraerListaDevolucionesTranOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerListaDevolucionesTranCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerListaDevolucionesTranCompleted(Me, New TraerListaDevolucionesTranCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerListaDevolucionesDomic", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerListaDevolucionesDomic(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TraerListaDevolucionesDomic", New Object() {usuario, IP, servicio})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginTraerListaDevolucionesDomic(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerListaDevolucionesDomic", New Object() {usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerListaDevolucionesDomic(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerListaDevolucionesDomicAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.TraerListaDevolucionesDomicAsync(usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerListaDevolucionesDomicAsync(ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.TraerListaDevolucionesDomicOperationCompleted Is Nothing) Then
                Me.TraerListaDevolucionesDomicOperationCompleted = AddressOf Me.OnTraerListaDevolucionesDomicOperationCompleted
            End If
            Me.InvokeAsync("TraerListaDevolucionesDomic", New Object() {usuario, IP, servicio}, Me.TraerListaDevolucionesDomicOperationCompleted, userState)
        End Sub

        Private Sub OnTraerListaDevolucionesDomicOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerListaDevolucionesDomicCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerListaDevolucionesDomicCompleted(Me, New TraerListaDevolucionesDomicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TotalDomiEnTramite", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TotalDomiEnTramite(ByVal FechaCorte As Date, ByVal usuario As String, ByVal IP As String) As Integer
            Dim results() As Object = Me.Invoke("TotalDomiEnTramite", New Object() {FechaCorte, usuario, IP})
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Function BeginTotalDomiEnTramite(ByVal FechaCorte As Date, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TotalDomiEnTramite", New Object() {FechaCorte, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTotalDomiEnTramite(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Overloads Sub TotalDomiEnTramiteAsync(ByVal FechaCorte As Date, ByVal usuario As String, ByVal IP As String)
            Me.TotalDomiEnTramiteAsync(FechaCorte, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TotalDomiEnTramiteAsync(ByVal FechaCorte As Date, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TotalDomiEnTramiteOperationCompleted Is Nothing) Then
                Me.TotalDomiEnTramiteOperationCompleted = AddressOf Me.OnTotalDomiEnTramiteOperationCompleted
            End If
            Me.InvokeAsync("TotalDomiEnTramite", New Object() {FechaCorte, usuario, IP}, Me.TotalDomiEnTramiteOperationCompleted, userState)
        End Sub

        Private Sub OnTotalDomiEnTramiteOperationCompleted(ByVal arg As Object)
            If (Not (Me.TotalDomiEnTramiteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TotalDomiEnTramiteCompleted(Me, New TotalDomiEnTramiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ExistenPropuestasPendientes", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ExistenPropuestasPendientes(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal usuario As String, ByVal IP As String) As Boolean
            Dim results() As Object = Me.Invoke("ExistenPropuestasPendientes", New Object() {TipoOperacion, FechaCiclo, usuario, IP})
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Function BeginExistenPropuestasPendientes(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ExistenPropuestasPendientes", New Object() {TipoOperacion, FechaCiclo, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndExistenPropuestasPendientes(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Overloads Sub ExistenPropuestasPendientesAsync(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal usuario As String, ByVal IP As String)
            Me.ExistenPropuestasPendientesAsync(TipoOperacion, FechaCiclo, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ExistenPropuestasPendientesAsync(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ExistenPropuestasPendientesOperationCompleted Is Nothing) Then
                Me.ExistenPropuestasPendientesOperationCompleted = AddressOf Me.OnExistenPropuestasPendientesOperationCompleted
            End If
            Me.InvokeAsync("ExistenPropuestasPendientes", New Object() {TipoOperacion, FechaCiclo, usuario, IP}, Me.ExistenPropuestasPendientesOperationCompleted, userState)
        End Sub

        Private Sub OnExistenPropuestasPendientesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExistenPropuestasPendientesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExistenPropuestasPendientesCompleted(Me, New ExistenPropuestasPendientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/PropuestasPendientesValida", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function PropuestasPendientesValida(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal NumeroPropuesta As Integer, ByVal CodigoServicio As Integer, ByVal usuario As String, ByVal IP As String) As Boolean
            Dim results() As Object = Me.Invoke("PropuestasPendientesValida", New Object() {TipoOperacion, FechaCiclo, NumeroPropuesta, CodigoServicio, usuario, IP})
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Function BeginPropuestasPendientesValida(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal NumeroPropuesta As Integer, ByVal CodigoServicio As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PropuestasPendientesValida", New Object() {TipoOperacion, FechaCiclo, NumeroPropuesta, CodigoServicio, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndPropuestasPendientesValida(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Overloads Sub PropuestasPendientesValidaAsync(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal NumeroPropuesta As Integer, ByVal CodigoServicio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.PropuestasPendientesValidaAsync(TipoOperacion, FechaCiclo, NumeroPropuesta, CodigoServicio, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub PropuestasPendientesValidaAsync(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal NumeroPropuesta As Integer, ByVal CodigoServicio As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.PropuestasPendientesValidaOperationCompleted Is Nothing) Then
                Me.PropuestasPendientesValidaOperationCompleted = AddressOf Me.OnPropuestasPendientesValidaOperationCompleted
            End If
            Me.InvokeAsync("PropuestasPendientesValida", New Object() {TipoOperacion, FechaCiclo, NumeroPropuesta, CodigoServicio, usuario, IP}, Me.PropuestasPendientesValidaOperationCompleted, userState)
        End Sub

        Private Sub OnPropuestasPendientesValidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.PropuestasPendientesValidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PropuestasPendientesValidaCompleted(Me, New PropuestasPendientesValidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AgregarDevolucionTmp", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub AgregarDevolucionTmp(ByVal TipoOperacion As String, ByVal NumeroTransaccion As Integer, ByVal CodigoMotivoRechazo As Integer, ByVal CodigoReferencia As String, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.Invoke("AgregarDevolucionTmp", New Object() {TipoOperacion, NumeroTransaccion, CodigoMotivoRechazo, CodigoReferencia, usuario, IP, servicio})
        End Sub

        '''<remarks/>
        Public Function BeginAgregarDevolucionTmp(ByVal TipoOperacion As String, ByVal NumeroTransaccion As Integer, ByVal CodigoMotivoRechazo As Integer, ByVal CodigoReferencia As String, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarDevolucionTmp", New Object() {TipoOperacion, NumeroTransaccion, CodigoMotivoRechazo, CodigoReferencia, usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndAgregarDevolucionTmp(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarDevolucionTmpAsync(ByVal TipoOperacion As String, ByVal NumeroTransaccion As Integer, ByVal CodigoMotivoRechazo As Integer, ByVal CodigoReferencia As String, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.AgregarDevolucionTmpAsync(TipoOperacion, NumeroTransaccion, CodigoMotivoRechazo, CodigoReferencia, usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarDevolucionTmpAsync(ByVal TipoOperacion As String, ByVal NumeroTransaccion As Integer, ByVal CodigoMotivoRechazo As Integer, ByVal CodigoReferencia As String, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.AgregarDevolucionTmpOperationCompleted Is Nothing) Then
                Me.AgregarDevolucionTmpOperationCompleted = AddressOf Me.OnAgregarDevolucionTmpOperationCompleted
            End If
            Me.InvokeAsync("AgregarDevolucionTmp", New Object() {TipoOperacion, NumeroTransaccion, CodigoMotivoRechazo, CodigoReferencia, usuario, IP, servicio}, Me.AgregarDevolucionTmpOperationCompleted, userState)
        End Sub

        Private Sub OnAgregarDevolucionTmpOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregarDevolucionTmpCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregarDevolucionTmpCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/BorrarDevolucionTmp", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub BorrarDevolucionTmp(ByVal TipoOperacion As String, ByVal NumeroTransaccion As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.Invoke("BorrarDevolucionTmp", New Object() {TipoOperacion, NumeroTransaccion, usuario, IP, servicio})
        End Sub

        '''<remarks/>
        Public Function BeginBorrarDevolucionTmp(ByVal TipoOperacion As String, ByVal NumeroTransaccion As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorrarDevolucionTmp", New Object() {TipoOperacion, NumeroTransaccion, usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndBorrarDevolucionTmp(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarDevolucionTmpAsync(ByVal TipoOperacion As String, ByVal NumeroTransaccion As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.BorrarDevolucionTmpAsync(TipoOperacion, NumeroTransaccion, usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarDevolucionTmpAsync(ByVal TipoOperacion As String, ByVal NumeroTransaccion As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.BorrarDevolucionTmpOperationCompleted Is Nothing) Then
                Me.BorrarDevolucionTmpOperationCompleted = AddressOf Me.OnBorrarDevolucionTmpOperationCompleted
            End If
            Me.InvokeAsync("BorrarDevolucionTmp", New Object() {TipoOperacion, NumeroTransaccion, usuario, IP, servicio}, Me.BorrarDevolucionTmpOperationCompleted, userState)
        End Sub

        Private Sub OnBorrarDevolucionTmpOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorrarDevolucionTmpCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorrarDevolucionTmpCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ExisteTranEnPropuesta", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ExisteTranEnPropuesta(ByVal TipoOperacion As String, ByVal NumeroPropuesta As Integer, ByVal NumeroTransaccion As Integer, ByVal usuario As String, ByVal IP As String) As Boolean
            Dim results() As Object = Me.Invoke("ExisteTranEnPropuesta", New Object() {TipoOperacion, NumeroPropuesta, NumeroTransaccion, usuario, IP})
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Function BeginExisteTranEnPropuesta(ByVal TipoOperacion As String, ByVal NumeroPropuesta As Integer, ByVal NumeroTransaccion As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ExisteTranEnPropuesta", New Object() {TipoOperacion, NumeroPropuesta, NumeroTransaccion, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndExisteTranEnPropuesta(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Overloads Sub ExisteTranEnPropuestaAsync(ByVal TipoOperacion As String, ByVal NumeroPropuesta As Integer, ByVal NumeroTransaccion As Integer, ByVal usuario As String, ByVal IP As String)
            Me.ExisteTranEnPropuestaAsync(TipoOperacion, NumeroPropuesta, NumeroTransaccion, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ExisteTranEnPropuestaAsync(ByVal TipoOperacion As String, ByVal NumeroPropuesta As Integer, ByVal NumeroTransaccion As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ExisteTranEnPropuestaOperationCompleted Is Nothing) Then
                Me.ExisteTranEnPropuestaOperationCompleted = AddressOf Me.OnExisteTranEnPropuestaOperationCompleted
            End If
            Me.InvokeAsync("ExisteTranEnPropuesta", New Object() {TipoOperacion, NumeroPropuesta, NumeroTransaccion, usuario, IP}, Me.ExisteTranEnPropuestaOperationCompleted, userState)
        End Sub

        Private Sub OnExisteTranEnPropuestaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExisteTranEnPropuestaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExisteTranEnPropuestaCompleted(Me, New ExisteTranEnPropuestaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AplicaDevolucionesSinpe", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub AplicaDevolucionesSinpe(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal Entidad As String, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.Invoke("AplicaDevolucionesSinpe", New Object() {TipoOperacion, FechaCiclo, Entidad, usuario, IP, servicio})
        End Sub

        '''<remarks/>
        Public Function BeginAplicaDevolucionesSinpe(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal Entidad As String, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AplicaDevolucionesSinpe", New Object() {TipoOperacion, FechaCiclo, Entidad, usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndAplicaDevolucionesSinpe(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub AplicaDevolucionesSinpeAsync(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal Entidad As String, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.AplicaDevolucionesSinpeAsync(TipoOperacion, FechaCiclo, Entidad, usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AplicaDevolucionesSinpeAsync(ByVal TipoOperacion As String, ByVal FechaCiclo As Date, ByVal Entidad As String, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.AplicaDevolucionesSinpeOperationCompleted Is Nothing) Then
                Me.AplicaDevolucionesSinpeOperationCompleted = AddressOf Me.OnAplicaDevolucionesSinpeOperationCompleted
            End If
            Me.InvokeAsync("AplicaDevolucionesSinpe", New Object() {TipoOperacion, FechaCiclo, Entidad, usuario, IP, servicio}, Me.AplicaDevolucionesSinpeOperationCompleted, userState)
        End Sub

        Private Sub OnAplicaDevolucionesSinpeOperationCompleted(ByVal arg As Object)
            If (Not (Me.AplicaDevolucionesSinpeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AplicaDevolucionesSinpeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AplicaDevolucionesDomicSinpe", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub AplicaDevolucionesDomicSinpe(ByVal FechaCorte As Date, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.Invoke("AplicaDevolucionesDomicSinpe", New Object() {FechaCorte, usuario, IP, servicio})
        End Sub

        '''<remarks/>
        Public Function BeginAplicaDevolucionesDomicSinpe(ByVal FechaCorte As Date, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AplicaDevolucionesDomicSinpe", New Object() {FechaCorte, usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndAplicaDevolucionesDomicSinpe(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub AplicaDevolucionesDomicSinpeAsync(ByVal FechaCorte As Date, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.AplicaDevolucionesDomicSinpeAsync(FechaCorte, usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AplicaDevolucionesDomicSinpeAsync(ByVal FechaCorte As Date, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.AplicaDevolucionesDomicSinpeOperationCompleted Is Nothing) Then
                Me.AplicaDevolucionesDomicSinpeOperationCompleted = AddressOf Me.OnAplicaDevolucionesDomicSinpeOperationCompleted
            End If
            Me.InvokeAsync("AplicaDevolucionesDomicSinpe", New Object() {FechaCorte, usuario, IP, servicio}, Me.AplicaDevolucionesDomicSinpeOperationCompleted, userState)
        End Sub

        Private Sub OnAplicaDevolucionesDomicSinpeOperationCompleted(ByVal arg As Object)
            If (Not (Me.AplicaDevolucionesDomicSinpeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AplicaDevolucionesDomicSinpeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AplicaDevolucionesOtros", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub AplicaDevolucionesOtros(ByVal TipoOperacion As String, ByVal NumeroPropuesta As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.Invoke("AplicaDevolucionesOtros", New Object() {TipoOperacion, NumeroPropuesta, usuario, IP, servicio})
        End Sub

        '''<remarks/>
        Public Function BeginAplicaDevolucionesOtros(ByVal TipoOperacion As String, ByVal NumeroPropuesta As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AplicaDevolucionesOtros", New Object() {TipoOperacion, NumeroPropuesta, usuario, IP, servicio}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndAplicaDevolucionesOtros(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub AplicaDevolucionesOtrosAsync(ByVal TipoOperacion As String, ByVal NumeroPropuesta As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer)
            Me.AplicaDevolucionesOtrosAsync(TipoOperacion, NumeroPropuesta, usuario, IP, servicio, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AplicaDevolucionesOtrosAsync(ByVal TipoOperacion As String, ByVal NumeroPropuesta As Integer, ByVal usuario As String, ByVal IP As String, ByVal servicio As Integer, ByVal userState As Object)
            If (Me.AplicaDevolucionesOtrosOperationCompleted Is Nothing) Then
                Me.AplicaDevolucionesOtrosOperationCompleted = AddressOf Me.OnAplicaDevolucionesOtrosOperationCompleted
            End If
            Me.InvokeAsync("AplicaDevolucionesOtros", New Object() {TipoOperacion, NumeroPropuesta, usuario, IP, servicio}, Me.AplicaDevolucionesOtrosOperationCompleted, userState)
        End Sub

        Private Sub OnAplicaDevolucionesOtrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.AplicaDevolucionesOtrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AplicaDevolucionesOtrosCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub InicializarCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub InicializarDevolucionesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub InicializarBancosContCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AgregarBancoAContingenciaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub BorrarBancoDeContingenciaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerListaBancosContCompletedEventHandler(ByVal sender As Object, ByVal e As TraerListaBancosContCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerListaBancosContCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerListaDevolucionesTranCompletedEventHandler(ByVal sender As Object, ByVal e As TraerListaDevolucionesTranCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerListaDevolucionesTranCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerListaDevolucionesDomicCompletedEventHandler(ByVal sender As Object, ByVal e As TraerListaDevolucionesDomicCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerListaDevolucionesDomicCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TotalDomiEnTramiteCompletedEventHandler(ByVal sender As Object, ByVal e As TotalDomiEnTramiteCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TotalDomiEnTramiteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ExistenPropuestasPendientesCompletedEventHandler(ByVal sender As Object, ByVal e As ExistenPropuestasPendientesCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ExistenPropuestasPendientesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Boolean)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub PropuestasPendientesValidaCompletedEventHandler(ByVal sender As Object, ByVal e As PropuestasPendientesValidaCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class PropuestasPendientesValidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Boolean)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AgregarDevolucionTmpCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub BorrarDevolucionTmpCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ExisteTranEnPropuestaCompletedEventHandler(ByVal sender As Object, ByVal e As ExisteTranEnPropuestaCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ExisteTranEnPropuestaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Boolean)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AplicaDevolucionesSinpeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AplicaDevolucionesDomicSinpeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AplicaDevolucionesOtrosCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace