'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.3615
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Imports System.Configuration

'
'This source code was auto-generated by wsdl, Version=2.0.50727.3038.
'
Namespace UsrPagos.Dat_Liquidaciones


    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="Dat_LiquidacionesSoap", [Namespace]:="http://www.prosoft.cr/")> _
    Partial Public Class Dat_Liquidaciones
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private ConsultaLiquidacionOperationCompleted As System.Threading.SendOrPostCallback

        Private AgregaLiquidacionOperationCompleted As System.Threading.SendOrPostCallback

        Private ActualizaLiquidacionOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = ConfigurationManager.AppSettings(Constantes.ServidorDatos) + "UsrPagos/Dat_Liquidaciones.asmx"
        End Sub

        '''<remarks/>
        Public Event ConsultaLiquidacionCompleted As ConsultaLiquidacionCompletedEventHandler

        '''<remarks/>
        Public Event AgregaLiquidacionCompleted As AgregaLiquidacionCompletedEventHandler

        '''<remarks/>
        Public Event ActualizaLiquidacionCompleted As ActualizaLiquidacionCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ConsultaLiquidacion", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub ConsultaLiquidacion(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByRef existe As Boolean, ByRef cerrada As Boolean, ByVal usuario As String, ByVal IP As String)
            Dim results() As Object = Me.Invoke("ConsultaLiquidacion", New Object() {codigoServicio, modalidad, fechaCiclo, existe, cerrada, usuario, IP})
            existe = CType(results(0), Boolean)
            cerrada = CType(results(1), Boolean)
        End Sub

        '''<remarks/>
        Public Function BeginConsultaLiquidacion(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal existe As Boolean, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ConsultaLiquidacion", New Object() {codigoServicio, modalidad, fechaCiclo, existe, cerrada, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndConsultaLiquidacion(ByVal asyncResult As System.IAsyncResult, ByRef existe As Boolean, ByRef cerrada As Boolean)
            Dim results() As Object = Me.EndInvoke(asyncResult)
            existe = CType(results(0), Boolean)
            cerrada = CType(results(1), Boolean)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConsultaLiquidacionAsync(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal existe As Boolean, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String)
            Me.ConsultaLiquidacionAsync(codigoServicio, modalidad, fechaCiclo, existe, cerrada, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConsultaLiquidacionAsync(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal existe As Boolean, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ConsultaLiquidacionOperationCompleted Is Nothing) Then
                Me.ConsultaLiquidacionOperationCompleted = AddressOf Me.OnConsultaLiquidacionOperationCompleted
            End If
            Me.InvokeAsync("ConsultaLiquidacion", New Object() {codigoServicio, modalidad, fechaCiclo, existe, cerrada, usuario, IP}, Me.ConsultaLiquidacionOperationCompleted, userState)
        End Sub

        Private Sub OnConsultaLiquidacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaLiquidacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaLiquidacionCompleted(Me, New ConsultaLiquidacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AgregaLiquidacion", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function AgregaLiquidacion(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String) As Boolean
            Dim results() As Object = Me.Invoke("AgregaLiquidacion", New Object() {codigoServicio, modalidad, fechaCiclo, cerrada, usuario, IP})
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Function BeginAgregaLiquidacion(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregaLiquidacion", New Object() {codigoServicio, modalidad, fechaCiclo, cerrada, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndAgregaLiquidacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Overloads Sub AgregaLiquidacionAsync(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String)
            Me.AgregaLiquidacionAsync(codigoServicio, modalidad, fechaCiclo, cerrada, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregaLiquidacionAsync(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.AgregaLiquidacionOperationCompleted Is Nothing) Then
                Me.AgregaLiquidacionOperationCompleted = AddressOf Me.OnAgregaLiquidacionOperationCompleted
            End If
            Me.InvokeAsync("AgregaLiquidacion", New Object() {codigoServicio, modalidad, fechaCiclo, cerrada, usuario, IP}, Me.AgregaLiquidacionOperationCompleted, userState)
        End Sub

        Private Sub OnAgregaLiquidacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregaLiquidacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregaLiquidacionCompleted(Me, New AgregaLiquidacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ActualizaLiquidacion", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ActualizaLiquidacion(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String) As Boolean
            Dim results() As Object = Me.Invoke("ActualizaLiquidacion", New Object() {codigoServicio, modalidad, fechaCiclo, cerrada, usuario, IP})
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Function BeginActualizaLiquidacion(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizaLiquidacion", New Object() {codigoServicio, modalidad, fechaCiclo, cerrada, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndActualizaLiquidacion(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Overloads Sub ActualizaLiquidacionAsync(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String)
            Me.ActualizaLiquidacionAsync(codigoServicio, modalidad, fechaCiclo, cerrada, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ActualizaLiquidacionAsync(ByVal codigoServicio As Integer, ByVal modalidad As String, ByVal fechaCiclo As Date, ByVal cerrada As Boolean, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ActualizaLiquidacionOperationCompleted Is Nothing) Then
                Me.ActualizaLiquidacionOperationCompleted = AddressOf Me.OnActualizaLiquidacionOperationCompleted
            End If
            Me.InvokeAsync("ActualizaLiquidacion", New Object() {codigoServicio, modalidad, fechaCiclo, cerrada, usuario, IP}, Me.ActualizaLiquidacionOperationCompleted, userState)
        End Sub

        Private Sub OnActualizaLiquidacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizaLiquidacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizaLiquidacionCompleted(Me, New ActualizaLiquidacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ConsultaLiquidacionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaLiquidacionCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ConsultaLiquidacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property existe() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Boolean)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property cerrada() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(1), Boolean)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AgregaLiquidacionCompletedEventHandler(ByVal sender As Object, ByVal e As AgregaLiquidacionCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class AgregaLiquidacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Boolean)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ActualizaLiquidacionCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizaLiquidacionCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ActualizaLiquidacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Boolean)
            End Get
        End Property
    End Class

End Namespace