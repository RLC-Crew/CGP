'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.4952
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

Imports System.Configuration


'
'This source code was auto-generated by wsdl, Version=2.0.50727.3038.
'
Namespace UsrPagos.Dat_PC_Parametros


    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="Dat_PC_ParametrosSoap", [Namespace]:="http://www.prosoft.cr/")> _
    Partial Public Class Dat_PC_Parametros
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private AgregarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private BorrarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private ModificarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerRegistroBDOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerEntidadDefectoOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerEntidadesUsuarioOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerListaTotalBDOperationCompleted As System.Threading.SendOrPostCallback

        Private TraeConfiguracionDeOpcionesOperationCompleted As System.Threading.SendOrPostCallback

        Private ObtenerPorCodigoEntidadOperationCompleted As System.Threading.SendOrPostCallback

        Private ListarParametrosOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = ConfigurationManager.AppSettings(Constantes.ServidorDatos) + "UsrPagos/Dat_PC_Parametros.asmx"
        End Sub

        '''<remarks/>
        Public Event AgregarBDCompleted As AgregarBDCompletedEventHandler

        '''<remarks/>
        Public Event BorrarBDCompleted As BorrarBDCompletedEventHandler

        '''<remarks/>
        Public Event ModificarBDCompleted As ModificarBDCompletedEventHandler

        '''<remarks/>
        Public Event TraerRegistroBDCompleted As TraerRegistroBDCompletedEventHandler

        '''<remarks/>
        Public Event TraerEntidadDefectoCompleted As TraerEntidadDefectoCompletedEventHandler

        '''<remarks/>
        Public Event TraerEntidadesUsuarioCompleted As TraerEntidadesUsuarioCompletedEventHandler

        '''<remarks/>
        Public Event TraerListaTotalBDCompleted As TraerListaTotalBDCompletedEventHandler

        '''<remarks/>
        Public Event TraeConfiguracionDeOpcionesCompleted As TraeConfiguracionDeOpcionesCompletedEventHandler

        '''<remarks/>
        Public Event ObtenerPorCodigoEntidadCompleted As ObtenerPorCodigoEntidadCompletedEventHandler

        '''<remarks/>
        Public Event ListarParametrosCompleted As ListarParametrosCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AgregarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub AgregarBD(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("AgregarBD", New Object() {v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginAgregarBD(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarBD", New Object() {v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndAgregarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarBDAsync(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal usuario As String, ByVal IP As String)
            Me.AgregarBDAsync(v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarBDAsync(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.AgregarBDOperationCompleted Is Nothing) Then
                Me.AgregarBDOperationCompleted = AddressOf Me.OnAgregarBDOperationCompleted
            End If
            Me.InvokeAsync("AgregarBD", New Object() {v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, usuario, IP}, Me.AgregarBDOperationCompleted, userState)
        End Sub

        Private Sub OnAgregarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/BorrarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub BorrarBD(ByVal v_CodigoEntidadOrigen As String, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("BorrarBD", New Object() {v_CodigoEntidadOrigen, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginBorrarBD(ByVal v_CodigoEntidadOrigen As String, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorrarBD", New Object() {v_CodigoEntidadOrigen, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndBorrarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarBDAsync(ByVal v_CodigoEntidadOrigen As String, ByVal usuario As String, ByVal IP As String)
            Me.BorrarBDAsync(v_CodigoEntidadOrigen, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarBDAsync(ByVal v_CodigoEntidadOrigen As String, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.BorrarBDOperationCompleted Is Nothing) Then
                Me.BorrarBDOperationCompleted = AddressOf Me.OnBorrarBDOperationCompleted
            End If
            Me.InvokeAsync("BorrarBD", New Object() {v_CodigoEntidadOrigen, usuario, IP}, Me.BorrarBDOperationCompleted, userState)
        End Sub

        Private Sub OnBorrarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorrarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorrarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ModificarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub ModificarBD(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("ModificarBD", New Object() {v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginModificarBD(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBD", New Object() {v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndModificarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModificarBDAsync(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal usuario As String, ByVal IP As String)
            Me.ModificarBDAsync(v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModificarBDAsync(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ModificarBDOperationCompleted Is Nothing) Then
                Me.ModificarBDOperationCompleted = AddressOf Me.OnModificarBDOperationCompleted
            End If
            Me.InvokeAsync("ModificarBD", New Object() {v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, usuario, IP}, Me.ModificarBDOperationCompleted, userState)
        End Sub

        Private Sub OnModificarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerRegistroBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub TraerRegistroBD(ByVal v_CodigoEntidadOrigen As String, ByRef v_CedulaEntidad As String, ByRef v_NombreEntidad As String, ByRef v_DirectorioGen As String, ByRef v_CodigoServicioPagos As Integer, ByRef v_CodigoServicioCobros As Integer, ByRef v_CuentaReservaOrigen As String, ByVal usuario As String, ByVal IP As String)
            Dim results() As Object = Me.Invoke("TraerRegistroBD", New Object() {v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, v_CuentaReservaOrigen, usuario, IP})
            v_CedulaEntidad = CType(results(0), String)
            v_NombreEntidad = CType(results(1), String)
            v_DirectorioGen = CType(results(2), String)
            v_CodigoServicioPagos = CType(results(3), Integer)
            v_CodigoServicioCobros = CType(results(4), Integer)
            v_CuentaReservaOrigen = CType(results(5), String)
        End Sub

        '''<remarks/>
        Public Function BeginTraerRegistroBD(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal v_CuentaReservaOrigen As String, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerRegistroBD", New Object() {v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, v_CuentaReservaOrigen, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndTraerRegistroBD(ByVal asyncResult As System.IAsyncResult, ByRef v_CedulaEntidad As String, ByRef v_NombreEntidad As String, ByRef v_DirectorioGen As String, ByRef v_CodigoServicioPagos As Integer, ByRef v_CodigoServicioCobros As Integer, ByRef v_CuentaReservaOrigen As String)
            Dim results() As Object = Me.EndInvoke(asyncResult)
            v_CedulaEntidad = CType(results(0), String)
            v_NombreEntidad = CType(results(1), String)
            v_DirectorioGen = CType(results(2), String)
            v_CodigoServicioPagos = CType(results(3), Integer)
            v_CodigoServicioCobros = CType(results(4), Integer)
            v_CuentaReservaOrigen = CType(results(5), String)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerRegistroBDAsync(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal v_CuentaReservaOrigen As String, ByVal usuario As String, ByVal IP As String)
            Me.TraerRegistroBDAsync(v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, v_CuentaReservaOrigen, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerRegistroBDAsync(ByVal v_CodigoEntidadOrigen As String, ByVal v_CedulaEntidad As String, ByVal v_NombreEntidad As String, ByVal v_DirectorioGen As String, ByVal v_CodigoServicioPagos As Integer, ByVal v_CodigoServicioCobros As Integer, ByVal v_CuentaReservaOrigen As String, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerRegistroBDOperationCompleted Is Nothing) Then
                Me.TraerRegistroBDOperationCompleted = AddressOf Me.OnTraerRegistroBDOperationCompleted
            End If
            Me.InvokeAsync("TraerRegistroBD", New Object() {v_CodigoEntidadOrigen, v_CedulaEntidad, v_NombreEntidad, v_DirectorioGen, v_CodigoServicioPagos, v_CodigoServicioCobros, v_CuentaReservaOrigen, usuario, IP}, Me.TraerRegistroBDOperationCompleted, userState)
        End Sub

        Private Sub OnTraerRegistroBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerRegistroBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerRegistroBDCompleted(Me, New TraerRegistroBDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerEntidadDefecto", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerEntidadDefecto(ByVal usuario As String, ByVal IP As String) As String
            Dim results() As Object = Me.Invoke("TraerEntidadDefecto", New Object() {usuario, IP})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Function BeginTraerEntidadDefecto(ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerEntidadDefecto", New Object() {usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerEntidadDefecto(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerEntidadDefectoAsync(ByVal usuario As String, ByVal IP As String)
            Me.TraerEntidadDefectoAsync(usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerEntidadDefectoAsync(ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerEntidadDefectoOperationCompleted Is Nothing) Then
                Me.TraerEntidadDefectoOperationCompleted = AddressOf Me.OnTraerEntidadDefectoOperationCompleted
            End If
            Me.InvokeAsync("TraerEntidadDefecto", New Object() {usuario, IP}, Me.TraerEntidadDefectoOperationCompleted, userState)
        End Sub

        Private Sub OnTraerEntidadDefectoOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerEntidadDefectoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerEntidadDefectoCompleted(Me, New TraerEntidadDefectoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerEntidadesUsuario", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerEntidadesUsuario(ByVal usuario As String, ByVal login As String, ByVal IP As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TraerEntidadesUsuario", New Object() {usuario, login, IP})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginTraerEntidadesUsuario(ByVal usuario As String, ByVal login As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerEntidadesUsuario", New Object() {usuario, login, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerEntidadesUsuario(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerEntidadesUsuarioAsync(ByVal usuario As String, ByVal login As String, ByVal IP As String)
            Me.TraerEntidadesUsuarioAsync(usuario, login, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerEntidadesUsuarioAsync(ByVal usuario As String, ByVal login As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerEntidadesUsuarioOperationCompleted Is Nothing) Then
                Me.TraerEntidadesUsuarioOperationCompleted = AddressOf Me.OnTraerEntidadesUsuarioOperationCompleted
            End If
            Me.InvokeAsync("TraerEntidadesUsuario", New Object() {usuario, login, IP}, Me.TraerEntidadesUsuarioOperationCompleted, userState)
        End Sub

        Private Sub OnTraerEntidadesUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerEntidadesUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerEntidadesUsuarioCompleted(Me, New TraerEntidadesUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerListaTotalBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerListaTotalBD(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TraerListaTotalBD", New Object() {ListaCondiciones, MaxRegistros, usuario, IP})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginTraerListaTotalBD(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerListaTotalBD", New Object() {ListaCondiciones, MaxRegistros, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerListaTotalBD(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerListaTotalBDAsync(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String)
            Me.TraerListaTotalBDAsync(ListaCondiciones, MaxRegistros, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerListaTotalBDAsync(ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerListaTotalBDOperationCompleted Is Nothing) Then
                Me.TraerListaTotalBDOperationCompleted = AddressOf Me.OnTraerListaTotalBDOperationCompleted
            End If
            Me.InvokeAsync("TraerListaTotalBD", New Object() {ListaCondiciones, MaxRegistros, usuario, IP}, Me.TraerListaTotalBDOperationCompleted, userState)
        End Sub

        Private Sub OnTraerListaTotalBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerListaTotalBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerListaTotalBDCompleted(Me, New TraerListaTotalBDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraeConfiguracionDeOpciones", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub TraeConfiguracionDeOpciones(ByVal v_CodigoEntidadOrigen As String, ByRef v_RequiereAutorizacionPagos As String, ByRef v_RequiereAutorizacionCobros As String, ByRef v_RequiereFirma1Pagos As String, ByRef v_RequiereFirma1Cobros As String, ByRef v_RequiereFirma2Pagos As String, ByRef v_RequiereFirma2Cobros As String, ByVal usuario As String, ByVal IP As String)
            Dim results() As Object = Me.Invoke("TraeConfiguracionDeOpciones", New Object() {v_CodigoEntidadOrigen, v_RequiereAutorizacionPagos, v_RequiereAutorizacionCobros, v_RequiereFirma1Pagos, v_RequiereFirma1Cobros, v_RequiereFirma2Pagos, v_RequiereFirma2Cobros, usuario, IP})
            v_RequiereAutorizacionPagos = CType(results(0), String)
            v_RequiereAutorizacionCobros = CType(results(1), String)
            v_RequiereFirma1Pagos = CType(results(2), String)
            v_RequiereFirma1Cobros = CType(results(3), String)
            v_RequiereFirma2Pagos = CType(results(4), String)
            v_RequiereFirma2Cobros = CType(results(5), String)
        End Sub

        '''<remarks/>
        Public Function BeginTraeConfiguracionDeOpciones(ByVal v_CodigoEntidadOrigen As String, ByVal v_RequiereAutorizacionPagos As String, ByVal v_RequiereAutorizacionCobros As String, ByVal v_RequiereFirma1Pagos As String, ByVal v_RequiereFirma1Cobros As String, ByVal v_RequiereFirma2Pagos As String, ByVal v_RequiereFirma2Cobros As String, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraeConfiguracionDeOpciones", New Object() {v_CodigoEntidadOrigen, v_RequiereAutorizacionPagos, v_RequiereAutorizacionCobros, v_RequiereFirma1Pagos, v_RequiereFirma1Cobros, v_RequiereFirma2Pagos, v_RequiereFirma2Cobros, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndTraeConfiguracionDeOpciones(ByVal asyncResult As System.IAsyncResult, ByRef v_RequiereAutorizacionPagos As String, ByRef v_RequiereAutorizacionCobros As String, ByRef v_RequiereFirma1Pagos As String, ByRef v_RequiereFirma1Cobros As String, ByRef v_RequiereFirma2Pagos As String, ByRef v_RequiereFirma2Cobros As String)
            Dim results() As Object = Me.EndInvoke(asyncResult)
            v_RequiereAutorizacionPagos = CType(results(0), String)
            v_RequiereAutorizacionCobros = CType(results(1), String)
            v_RequiereFirma1Pagos = CType(results(2), String)
            v_RequiereFirma1Cobros = CType(results(3), String)
            v_RequiereFirma2Pagos = CType(results(4), String)
            v_RequiereFirma2Cobros = CType(results(5), String)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraeConfiguracionDeOpcionesAsync(ByVal v_CodigoEntidadOrigen As String, ByVal v_RequiereAutorizacionPagos As String, ByVal v_RequiereAutorizacionCobros As String, ByVal v_RequiereFirma1Pagos As String, ByVal v_RequiereFirma1Cobros As String, ByVal v_RequiereFirma2Pagos As String, ByVal v_RequiereFirma2Cobros As String, ByVal usuario As String, ByVal IP As String)
            Me.TraeConfiguracionDeOpcionesAsync(v_CodigoEntidadOrigen, v_RequiereAutorizacionPagos, v_RequiereAutorizacionCobros, v_RequiereFirma1Pagos, v_RequiereFirma1Cobros, v_RequiereFirma2Pagos, v_RequiereFirma2Cobros, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraeConfiguracionDeOpcionesAsync(ByVal v_CodigoEntidadOrigen As String, ByVal v_RequiereAutorizacionPagos As String, ByVal v_RequiereAutorizacionCobros As String, ByVal v_RequiereFirma1Pagos As String, ByVal v_RequiereFirma1Cobros As String, ByVal v_RequiereFirma2Pagos As String, ByVal v_RequiereFirma2Cobros As String, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraeConfiguracionDeOpcionesOperationCompleted Is Nothing) Then
                Me.TraeConfiguracionDeOpcionesOperationCompleted = AddressOf Me.OnTraeConfiguracionDeOpcionesOperationCompleted
            End If
            Me.InvokeAsync("TraeConfiguracionDeOpciones", New Object() {v_CodigoEntidadOrigen, v_RequiereAutorizacionPagos, v_RequiereAutorizacionCobros, v_RequiereFirma1Pagos, v_RequiereFirma1Cobros, v_RequiereFirma2Pagos, v_RequiereFirma2Cobros, usuario, IP}, Me.TraeConfiguracionDeOpcionesOperationCompleted, userState)
        End Sub

        Private Sub OnTraeConfiguracionDeOpcionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraeConfiguracionDeOpcionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraeConfiguracionDeOpcionesCompleted(Me, New TraeConfiguracionDeOpcionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ObtenerPorCodigoEntidad", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ObtenerPorCodigoEntidad(ByVal codigoEntidad As Integer, ByVal usuario As String, ByVal IP As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerPorCodigoEntidad", New Object() {codigoEntidad, usuario, IP})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginObtenerPorCodigoEntidad(ByVal codigoEntidad As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerPorCodigoEntidad", New Object() {codigoEntidad, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndObtenerPorCodigoEntidad(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub ObtenerPorCodigoEntidadAsync(ByVal codigoEntidad As Integer, ByVal usuario As String, ByVal IP As String)
            Me.ObtenerPorCodigoEntidadAsync(codigoEntidad, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ObtenerPorCodigoEntidadAsync(ByVal codigoEntidad As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ObtenerPorCodigoEntidadOperationCompleted Is Nothing) Then
                Me.ObtenerPorCodigoEntidadOperationCompleted = AddressOf Me.OnObtenerPorCodigoEntidadOperationCompleted
            End If
            Me.InvokeAsync("ObtenerPorCodigoEntidad", New Object() {codigoEntidad, usuario, IP}, Me.ObtenerPorCodigoEntidadOperationCompleted, userState)
        End Sub

        Private Sub OnObtenerPorCodigoEntidadOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerPorCodigoEntidadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerPorCodigoEntidadCompleted(Me, New ObtenerPorCodigoEntidadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ListarParametros", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ListarParametros(ByVal usuario As String, ByVal IP As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListarParametros", New Object() {usuario, IP})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginListarParametros(ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListarParametros", New Object() {usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndListarParametros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub ListarParametrosAsync(ByVal usuario As String, ByVal IP As String)
            Me.ListarParametrosAsync(usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ListarParametrosAsync(ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ListarParametrosOperationCompleted Is Nothing) Then
                Me.ListarParametrosOperationCompleted = AddressOf Me.OnListarParametrosOperationCompleted
            End If
            Me.InvokeAsync("ListarParametros", New Object() {usuario, IP}, Me.ListarParametrosOperationCompleted, userState)
        End Sub

        Private Sub OnListarParametrosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListarParametrosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListarParametrosCompleted(Me, New ListarParametrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AgregarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub BorrarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ModificarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerRegistroBDCompletedEventHandler(ByVal sender As Object, ByVal e As TraerRegistroBDCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerRegistroBDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property v_CedulaEntidad() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_NombreEntidad() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(1), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_DirectorioGen() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(2), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_CodigoServicioPagos() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(3), Integer)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_CodigoServicioCobros() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(4), Integer)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_CuentaReservaOrigen() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(5), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerEntidadDefectoCompletedEventHandler(ByVal sender As Object, ByVal e As TraerEntidadDefectoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerEntidadDefectoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerEntidadesUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As TraerEntidadesUsuarioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerEntidadesUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerListaTotalBDCompletedEventHandler(ByVal sender As Object, ByVal e As TraerListaTotalBDCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerListaTotalBDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraeConfiguracionDeOpcionesCompletedEventHandler(ByVal sender As Object, ByVal e As TraeConfiguracionDeOpcionesCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraeConfiguracionDeOpcionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property v_RequiereAutorizacionPagos() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_RequiereAutorizacionCobros() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(1), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_RequiereFirma1Pagos() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(2), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_RequiereFirma1Cobros() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(3), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_RequiereFirma2Pagos() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(4), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_RequiereFirma2Cobros() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(5), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ObtenerPorCodigoEntidadCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerPorCodigoEntidadCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ObtenerPorCodigoEntidadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ListarParametrosCompletedEventHandler(ByVal sender As Object, ByVal e As ListarParametrosCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ListarParametrosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace