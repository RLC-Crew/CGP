'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3082
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization
Imports System.Configuration

'
'This source code was auto-generated by wsdl, Version=2.0.50727.3038.
'
Namespace UsrPagos.Dat_PC_Envios
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Web.Services.WebServiceBindingAttribute(Name:="Dat_PC_EnviosSoap", [Namespace]:="http://www.prosoft.cr/")> _
    Partial Public Class Dat_PC_Envios
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol

        Private AgregarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private BorrarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private ModificarBDOperationCompleted As System.Threading.SendOrPostCallback

        Private ModificarFechaCicloOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerCodigoEntidadOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerRegistroBDOperationCompleted As System.Threading.SendOrPostCallback

        Private ActualizarCentroCostoPredominanteOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerCentroCostoOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerListaPorCentroPropioOperationCompleted As System.Threading.SendOrPostCallback

        Private AprobarPropuestaOperationCompleted As System.Threading.SendOrPostCallback

        Private AutorizarPropuestaOperationCompleted As System.Threading.SendOrPostCallback

        Private Firma1PropuestaOperationCompleted As System.Threading.SendOrPostCallback

        Private Firma2PropuestaOperationCompleted As System.Threading.SendOrPostCallback

        Private RechazarPropuestaOperationCompleted As System.Threading.SendOrPostCallback

        Private EnviarPropuestaOperationCompleted As System.Threading.SendOrPostCallback

        Private TraerListaPorParamsOperationCompleted As System.Threading.SendOrPostCallback

        Private ListarEnviosOperationCompleted As System.Threading.SendOrPostCallback

        Private ActualizarEstadoEnvioOperationCompleted As System.Threading.SendOrPostCallback

        '''<remarks/>
        Public Sub New()
            MyBase.New()
            Me.Url = ConfigurationManager.AppSettings(Constantes.ServidorDatos) + "UsrPagos/Dat_PC_Envios.asmx"
        End Sub

        '''<remarks/>
        Public Event AgregarBDCompleted As AgregarBDCompletedEventHandler

        '''<remarks/>
        Public Event BorrarBDCompleted As BorrarBDCompletedEventHandler

        '''<remarks/>
        Public Event ModificarBDCompleted As ModificarBDCompletedEventHandler

        '''<remarks/>
        Public Event ModificarFechaCicloCompleted As ModificarFechaCicloCompletedEventHandler

        '''<remarks/>
        Public Event TraerCodigoEntidadCompleted As TraerCodigoEntidadCompletedEventHandler

        '''<remarks/>
        Public Event TraerRegistroBDCompleted As TraerRegistroBDCompletedEventHandler

        '''<remarks/>
        Public Event ActualizarCentroCostoPredominanteCompleted As ActualizarCentroCostoPredominanteCompletedEventHandler

        '''<remarks/>
        Public Event TraerCentroCostoCompleted As TraerCentroCostoCompletedEventHandler

        '''<remarks/>
        Public Event TraerListaPorCentroPropioCompleted As TraerListaPorCentroPropioCompletedEventHandler

        '''<remarks/>
        Public Event AprobarPropuestaCompleted As AprobarPropuestaCompletedEventHandler

        '''<remarks/>
        Public Event AutorizarPropuestaCompleted As AutorizarPropuestaCompletedEventHandler

        '''<remarks/>
        Public Event Firma1PropuestaCompleted As Firma1PropuestaCompletedEventHandler

        '''<remarks/>
        Public Event Firma2PropuestaCompleted As Firma2PropuestaCompletedEventHandler

        '''<remarks/>
        Public Event RechazarPropuestaCompleted As RechazarPropuestaCompletedEventHandler

        '''<remarks/>
        Public Event EnviarPropuestaCompleted As EnviarPropuestaCompletedEventHandler

        '''<remarks/>
        Public Event TraerListaPorParamsCompleted As TraerListaPorParamsCompletedEventHandler

        '''<remarks/>
        Public Event ListarEnviosCompleted As ListarEnviosCompletedEventHandler

        '''<remarks/>
        Public Event ActualizarEstadoEnvioCompleted As ActualizarEstadoEnvioCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AgregarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function AgregarBD(ByVal v_TipoOperacion As String, ByVal v_CodigoServicio As Integer, ByVal v_CodigoCentro As Integer, ByVal v_FechaCiclo As Date, ByVal v_DescripcionGen As String, ByVal v_Importado As String, ByVal v_Modalidad As String, ByVal usuario As String, ByVal IP As String) As Integer
            Dim results() As Object = Me.Invoke("AgregarBD", New Object() {v_TipoOperacion, v_CodigoServicio, v_CodigoCentro, v_FechaCiclo, v_DescripcionGen, v_Importado, v_Modalidad, usuario, IP})
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Function BeginAgregarBD(ByVal v_TipoOperacion As String, ByVal v_CodigoServicio As Integer, ByVal v_CodigoCentro As Integer, ByVal v_FechaCiclo As Date, ByVal v_DescripcionGen As String, ByVal v_Importado As String, ByVal v_Modalidad As String, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarBD", New Object() {v_TipoOperacion, v_CodigoServicio, v_CodigoCentro, v_FechaCiclo, v_DescripcionGen, v_Importado, v_Modalidad, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndAgregarBD(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Integer)
        End Function

        '''<remarks/>
        Public Overloads Sub AgregarBDAsync(ByVal v_TipoOperacion As String, ByVal v_CodigoServicio As Integer, ByVal v_CodigoCentro As Integer, ByVal v_FechaCiclo As Date, ByVal v_DescripcionGen As String, ByVal v_Importado As String, ByVal v_Modalidad As String, ByVal usuario As String, ByVal IP As String)
            Me.AgregarBDAsync(v_TipoOperacion, v_CodigoServicio, v_CodigoCentro, v_FechaCiclo, v_DescripcionGen, v_Importado, v_Modalidad, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AgregarBDAsync(ByVal v_TipoOperacion As String, ByVal v_CodigoServicio As Integer, ByVal v_CodigoCentro As Integer, ByVal v_FechaCiclo As Date, ByVal v_DescripcionGen As String, ByVal v_Importado As String, ByVal v_Modalidad As String, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.AgregarBDOperationCompleted Is Nothing) Then
                Me.AgregarBDOperationCompleted = AddressOf Me.OnAgregarBDOperationCompleted
            End If
            Me.InvokeAsync("AgregarBD", New Object() {v_TipoOperacion, v_CodigoServicio, v_CodigoCentro, v_FechaCiclo, v_DescripcionGen, v_Importado, v_Modalidad, usuario, IP}, Me.AgregarBDOperationCompleted, userState)
        End Sub

        Private Sub OnAgregarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.AgregarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AgregarBDCompleted(Me, New AgregarBDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/BorrarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub BorrarBD(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("BorrarBD", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginBorrarBD(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BorrarBD", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndBorrarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarBDAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.BorrarBDAsync(v_TipoOperacion, v_NumeroEnvio, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub BorrarBDAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.BorrarBDOperationCompleted Is Nothing) Then
                Me.BorrarBDOperationCompleted = AddressOf Me.OnBorrarBDOperationCompleted
            End If
            Me.InvokeAsync("BorrarBD", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, Me.BorrarBDOperationCompleted, userState)
        End Sub

        Private Sub OnBorrarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.BorrarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BorrarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ModificarBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub ModificarBD(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_CodigoServicio As Integer, ByVal v_FechaCiclo As Date, ByVal v_DescripcionGen As String, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("ModificarBD", New Object() {v_TipoOperacion, v_NumeroEnvio, v_CodigoServicio, v_FechaCiclo, v_DescripcionGen, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginModificarBD(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_CodigoServicio As Integer, ByVal v_FechaCiclo As Date, ByVal v_DescripcionGen As String, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarBD", New Object() {v_TipoOperacion, v_NumeroEnvio, v_CodigoServicio, v_FechaCiclo, v_DescripcionGen, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndModificarBD(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModificarBDAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_CodigoServicio As Integer, ByVal v_FechaCiclo As Date, ByVal v_DescripcionGen As String, ByVal usuario As String, ByVal IP As String)
            Me.ModificarBDAsync(v_TipoOperacion, v_NumeroEnvio, v_CodigoServicio, v_FechaCiclo, v_DescripcionGen, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModificarBDAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_CodigoServicio As Integer, ByVal v_FechaCiclo As Date, ByVal v_DescripcionGen As String, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ModificarBDOperationCompleted Is Nothing) Then
                Me.ModificarBDOperationCompleted = AddressOf Me.OnModificarBDOperationCompleted
            End If
            Me.InvokeAsync("ModificarBD", New Object() {v_TipoOperacion, v_NumeroEnvio, v_CodigoServicio, v_FechaCiclo, v_DescripcionGen, usuario, IP}, Me.ModificarBDOperationCompleted, userState)
        End Sub

        Private Sub OnModificarBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarBDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ModificarFechaCiclo", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub ModificarFechaCiclo(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_FechaCiclo As Date, ByVal v_CodigoServicio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("ModificarFechaCiclo", New Object() {v_TipoOperacion, v_NumeroEnvio, v_FechaCiclo, v_CodigoServicio, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginModificarFechaCiclo(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_FechaCiclo As Date, ByVal v_CodigoServicio As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarFechaCiclo", New Object() {v_TipoOperacion, v_NumeroEnvio, v_FechaCiclo, v_CodigoServicio, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndModificarFechaCiclo(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModificarFechaCicloAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_FechaCiclo As Date, ByVal v_CodigoServicio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.ModificarFechaCicloAsync(v_TipoOperacion, v_NumeroEnvio, v_FechaCiclo, v_CodigoServicio, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ModificarFechaCicloAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_FechaCiclo As Date, ByVal v_CodigoServicio As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ModificarFechaCicloOperationCompleted Is Nothing) Then
                Me.ModificarFechaCicloOperationCompleted = AddressOf Me.OnModificarFechaCicloOperationCompleted
            End If
            Me.InvokeAsync("ModificarFechaCiclo", New Object() {v_TipoOperacion, v_NumeroEnvio, v_FechaCiclo, v_CodigoServicio, usuario, IP}, Me.ModificarFechaCicloOperationCompleted, userState)
        End Sub

        Private Sub OnModificarFechaCicloOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModificarFechaCicloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModificarFechaCicloCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerCodigoEntidad", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerCodigoEntidad(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String) As String
            Dim results() As Object = Me.Invoke("TraerCodigoEntidad", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP})
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Function BeginTraerCodigoEntidad(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerCodigoEntidad", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerCodigoEntidad(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), String)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerCodigoEntidadAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.TraerCodigoEntidadAsync(v_TipoOperacion, v_NumeroEnvio, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerCodigoEntidadAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerCodigoEntidadOperationCompleted Is Nothing) Then
                Me.TraerCodigoEntidadOperationCompleted = AddressOf Me.OnTraerCodigoEntidadOperationCompleted
            End If
            Me.InvokeAsync("TraerCodigoEntidad", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, Me.TraerCodigoEntidadOperationCompleted, userState)
        End Sub

        Private Sub OnTraerCodigoEntidadOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerCodigoEntidadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerCodigoEntidadCompleted(Me, New TraerCodigoEntidadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerRegistroBD", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub TraerRegistroBD( _
                ByVal v_TipoOperacion As String, _
                ByVal v_NumeroEnvio As Integer, _
                ByRef v_CodigoServicio As Integer, _
                ByRef v_FechaCiclo As Date, _
                ByRef v_DescripcionGen As String, _
                ByRef v_EstadoEnvioSinpe As String, _
                ByRef v_Importado As String, _
                ByRef v_UsuarioAprueba As String, _
                ByRef v_FechaAprobacion As Date, _
                ByRef v_UsuarioEnvia As String, _
                ByRef v_FechaEnvio As Date, _
                ByRef v_UsuarioAutoriza As String, _
                ByRef v_FechaAutoriza As Date, _
                ByRef v_NumeroConsecutivo As Integer, _
                ByRef v_UsuarioFirma1 As String, _
                ByRef v_FechaFirma1 As Date, _
                ByRef v_UsuarioFirma2 As String, _
                ByRef v_FechaFirma2 As Date, _
                ByRef v_modalidad As String, _
                ByRef v_CentroCosto As Integer, _
                ByRef v_UsuarioRechazo As String, _
                ByRef v_FechaRechazo As Date, _
                ByRef v_ObservacionesRechazo As String, _
                ByVal usuario As String, _
                ByVal IP As String)
            Dim results() As Object = Me.Invoke("TraerRegistroBD", New Object() {v_TipoOperacion, v_NumeroEnvio, v_CodigoServicio, v_FechaCiclo, v_DescripcionGen, v_EstadoEnvioSinpe, v_Importado, v_UsuarioAprueba, v_FechaAprobacion, v_UsuarioEnvia, v_FechaEnvio, v_UsuarioAutoriza, v_FechaAutoriza, v_NumeroConsecutivo, v_UsuarioFirma1, v_FechaFirma1, v_UsuarioFirma2, v_FechaFirma2, v_modalidad, v_CentroCosto, v_UsuarioRechazo, v_FechaRechazo, v_ObservacionesRechazo, usuario, IP})
            v_CodigoServicio = CType(results(0), Integer)
            v_FechaCiclo = CType(results(1), Date)
            v_DescripcionGen = CType(results(2), String)
            v_EstadoEnvioSinpe = CType(results(3), String)
            v_Importado = CType(results(4), String)
            v_UsuarioAprueba = CType(results(5), String)
            v_FechaAprobacion = CType(results(6), Date)
            v_UsuarioEnvia = CType(results(7), String)
            v_FechaEnvio = CType(results(8), Date)
            v_UsuarioAutoriza = CType(results(9), String)
            v_FechaAutoriza = CType(results(10), Date)
            v_NumeroConsecutivo = CType(results(11), Integer)
            v_UsuarioFirma1 = CType(results(12), String)
            v_FechaFirma1 = CType(results(13), Date)
            v_UsuarioFirma2 = CType(results(14), String)
            v_FechaFirma2 = CType(results(15), Date)
            v_modalidad = CType(results(16), String)
            v_CentroCosto = CType(results(17), Integer)
            v_UsuarioRechazo = CType(results(18), String)
            v_FechaRechazo = CType(results(19), Date)
            v_ObservacionesRechazo = CType(results(20), String)
        End Sub

        '''<remarks/>
        Public Function BeginTraerRegistroBD( _
                    ByVal v_TipoOperacion As String, _
                    ByVal v_NumeroEnvio As Integer, _
                    ByVal v_CodigoServicio As Integer, _
                    ByVal v_FechaCiclo As Date, _
                    ByVal v_DescripcionGen As String, _
                    ByVal v_EstadoEnvioSinpe As String, _
                    ByVal v_Importado As String, _
                    ByVal v_UsuarioAprueba As String, _
                    ByVal v_FechaAprobacion As Date, _
                    ByVal v_UsuarioEnvia As String, _
                    ByVal v_FechaEnvio As Date, _
                    ByVal v_UsuarioAutoriza As String, _
                    ByVal v_FechaAutoriza As Date, _
                    ByVal v_NumeroConsecutivo As Integer, _
                    ByVal v_UsuarioFirma1 As String, _
                    ByVal v_FechaFirma1 As Date, _
                    ByVal v_UsuarioFirma2 As String, _
                    ByVal v_FechaFirma2 As Date, _
                    ByVal v_modalidad As String, _
                    ByVal v_CentroCosto As Integer, _
                    ByVal v_UsuarioRechazo As String, _
                    ByVal v_FechaRechazo As Date, _
                    ByVal v_ObservacionesRechazo As String, _
                    ByVal usuario As String, _
                    ByVal IP As String, _
                    ByVal callback As System.AsyncCallback, _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerRegistroBD", New Object() {v_TipoOperacion, v_NumeroEnvio, v_CodigoServicio, v_FechaCiclo, v_DescripcionGen, v_EstadoEnvioSinpe, v_Importado, v_UsuarioAprueba, v_FechaAprobacion, v_UsuarioEnvia, v_FechaEnvio, v_UsuarioAutoriza, v_FechaAutoriza, v_NumeroConsecutivo, v_UsuarioFirma1, v_FechaFirma1, v_UsuarioFirma2, v_FechaFirma2, v_modalidad, v_CentroCosto, v_UsuarioRechazo, v_FechaRechazo, v_ObservacionesRechazo, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndTraerRegistroBD( _
                    ByVal asyncResult As System.IAsyncResult, _
                    ByRef v_CodigoServicio As Integer, _
                    ByRef v_FechaCiclo As Date, _
                    ByRef v_DescripcionGen As String, _
                    ByRef v_EstadoEnvioSinpe As String, _
                    ByRef v_Importado As String, _
                    ByRef v_UsuarioAprueba As String, _
                    ByRef v_FechaAprobacion As Date, _
                    ByRef v_UsuarioEnvia As String, _
                    ByRef v_FechaEnvio As Date, _
                    ByRef v_UsuarioAutoriza As String, _
                    ByRef v_FechaAutoriza As Date, _
                    ByRef v_NumeroConsecutivo As Integer, _
                    ByRef v_UsuarioFirma1 As String, _
                    ByRef v_FechaFirma1 As Date, _
                    ByRef v_UsuarioFirma2 As String, _
                    ByRef v_FechaFirma2 As Date, _
                    ByRef v_modalidad As String, _
                    ByRef v_CentroCosto As Integer, _
                    ByRef v_UsuarioRechazo As String, _
                    ByRef v_FechaRechazo As Date, _
                    ByRef v_ObservacionesRechazo As String)
            Dim results() As Object = Me.EndInvoke(asyncResult)
            v_CodigoServicio = CType(results(0), Integer)
            v_FechaCiclo = CType(results(1), Date)
            v_DescripcionGen = CType(results(2), String)
            v_EstadoEnvioSinpe = CType(results(3), String)
            v_Importado = CType(results(4), String)
            v_UsuarioAprueba = CType(results(5), String)
            v_FechaAprobacion = CType(results(6), Date)
            v_UsuarioEnvia = CType(results(7), String)
            v_FechaEnvio = CType(results(8), Date)
            v_UsuarioAutoriza = CType(results(9), String)
            v_FechaAutoriza = CType(results(10), Date)
            v_NumeroConsecutivo = CType(results(11), Integer)
            v_UsuarioFirma1 = CType(results(12), String)
            v_FechaFirma1 = CType(results(13), Date)
            v_UsuarioFirma2 = CType(results(14), String)
            v_FechaFirma2 = CType(results(15), Date)
            v_modalidad = CType(results(16), String)
            v_CentroCosto = CType(results(17), Integer)
            v_UsuarioRechazo = CType(results(18), String)
            v_FechaRechazo = CType(results(19), Date)
            v_ObservacionesRechazo = CType(results(20), String)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerRegistroBDAsync( _
                    ByVal v_TipoOperacion As String, _
                    ByVal v_NumeroEnvio As Integer, _
                    ByVal v_CodigoServicio As Integer, _
                    ByVal v_FechaCiclo As Date, _
                    ByVal v_DescripcionGen As String, _
                    ByVal v_EstadoEnvioSinpe As String, _
                    ByVal v_Importado As String, _
                    ByVal v_UsuarioAprueba As String, _
                    ByVal v_FechaAprobacion As Date, _
                    ByVal v_UsuarioEnvia As String, _
                    ByVal v_FechaEnvio As Date, _
                    ByVal v_UsuarioAutoriza As String, _
                    ByVal v_FechaAutoriza As Date, _
                    ByVal v_NumeroConsecutivo As Integer, _
                    ByVal v_UsuarioFirma1 As String, _
                    ByVal v_FechaFirma1 As Date, _
                    ByVal v_UsuarioFirma2 As String, _
                    ByVal v_FechaFirma2 As Date, _
                    ByVal v_modalidad As String, _
                    ByVal v_CentroCosto As Integer, _
                    ByVal v_UsuarioRechazo As String, _
                    ByVal v_FechaRechazo As Date, _
                    ByVal v_ObservacionesRechazo As String, _
                    ByVal usuario As String, _
                    ByVal IP As String)
            Me.TraerRegistroBDAsync(v_TipoOperacion, v_NumeroEnvio, v_CodigoServicio, v_FechaCiclo, v_DescripcionGen, v_EstadoEnvioSinpe, v_Importado, v_UsuarioAprueba, v_FechaAprobacion, v_UsuarioEnvia, v_FechaEnvio, v_UsuarioAutoriza, v_FechaAutoriza, v_NumeroConsecutivo, v_UsuarioFirma1, v_FechaFirma1, v_UsuarioFirma2, v_FechaFirma2, v_modalidad, v_CentroCosto, v_UsuarioRechazo, v_FechaRechazo, v_ObservacionesRechazo, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerRegistroBDAsync( _
                    ByVal v_TipoOperacion As String, _
                    ByVal v_NumeroEnvio As Integer, _
                    ByVal v_CodigoServicio As Integer, _
                    ByVal v_FechaCiclo As Date, _
                    ByVal v_DescripcionGen As String, _
                    ByVal v_EstadoEnvioSinpe As String, _
                    ByVal v_Importado As String, _
                    ByVal v_UsuarioAprueba As String, _
                    ByVal v_FechaAprobacion As Date, _
                    ByVal v_UsuarioEnvia As String, _
                    ByVal v_FechaEnvio As Date, _
                    ByVal v_UsuarioAutoriza As String, _
                    ByVal v_FechaAutoriza As Date, _
                    ByVal v_NumeroConsecutivo As Integer, _
                    ByVal v_UsuarioFirma1 As String, _
                    ByVal v_FechaFirma1 As Date, _
                    ByVal v_UsuarioFirma2 As String, _
                    ByVal v_FechaFirma2 As Date, _
                    ByVal v_modalidad As String, _
                    ByVal v_CentroCosto As Integer, _
                    ByVal v_UsuarioRechazo As String, _
                    ByVal v_FechaRechazo As Date, _
                    ByVal v_ObservacionesRechazo As String, _
                    ByVal usuario As String, _
                    ByVal IP As String, _
                    ByVal userState As Object)
            If (Me.TraerRegistroBDOperationCompleted Is Nothing) Then
                Me.TraerRegistroBDOperationCompleted = AddressOf Me.OnTraerRegistroBDOperationCompleted
            End If
            Me.InvokeAsync("TraerRegistroBD", New Object() {v_TipoOperacion, v_NumeroEnvio, v_CodigoServicio, v_FechaCiclo, v_DescripcionGen, v_EstadoEnvioSinpe, v_Importado, v_UsuarioAprueba, v_FechaAprobacion, v_UsuarioEnvia, v_FechaEnvio, v_UsuarioAutoriza, v_FechaAutoriza, v_NumeroConsecutivo, v_UsuarioFirma1, v_FechaFirma1, v_UsuarioFirma2, v_FechaFirma2, v_modalidad, v_CentroCosto, v_UsuarioRechazo, v_FechaRechazo, v_ObservacionesRechazo, usuario, IP}, Me.TraerRegistroBDOperationCompleted, userState)
        End Sub

        Private Sub OnTraerRegistroBDOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerRegistroBDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerRegistroBDCompleted(Me, New TraerRegistroBDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ActualizarCentroCostoPredominante", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ActualizarCentroCostoPredominante(ByVal TipoOperacion As String, ByVal NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String) As Boolean
            Dim results() As Object = Me.Invoke("ActualizarCentroCostoPredominante", New Object() {TipoOperacion, NumeroEnvio, usuario, IP})
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Function BeginActualizarCentroCostoPredominante(ByVal TipoOperacion As String, ByVal NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizarCentroCostoPredominante", New Object() {TipoOperacion, NumeroEnvio, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndActualizarCentroCostoPredominante(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), Boolean)
        End Function

        '''<remarks/>
        Public Overloads Sub ActualizarCentroCostoPredominanteAsync(ByVal TipoOperacion As String, ByVal NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.ActualizarCentroCostoPredominanteAsync(TipoOperacion, NumeroEnvio, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ActualizarCentroCostoPredominanteAsync(ByVal TipoOperacion As String, ByVal NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ActualizarCentroCostoPredominanteOperationCompleted Is Nothing) Then
                Me.ActualizarCentroCostoPredominanteOperationCompleted = AddressOf Me.OnActualizarCentroCostoPredominanteOperationCompleted
            End If
            Me.InvokeAsync("ActualizarCentroCostoPredominante", New Object() {TipoOperacion, NumeroEnvio, usuario, IP}, Me.ActualizarCentroCostoPredominanteOperationCompleted, userState)
        End Sub

        Private Sub OnActualizarCentroCostoPredominanteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarCentroCostoPredominanteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarCentroCostoPredominanteCompleted(Me, New ActualizarCentroCostoPredominanteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerCentroCosto", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub TraerCentroCosto(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByRef v_CentroCosto As Integer, ByVal usuario As String, ByVal IP As String)
            Dim results() As Object = Me.Invoke("TraerCentroCosto", New Object() {v_TipoOperacion, v_NumeroEnvio, v_CentroCosto, usuario, IP})
            v_CentroCosto = CType(results(0), Integer)
        End Sub

        '''<remarks/>
        Public Function BeginTraerCentroCosto(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_CentroCosto As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerCentroCosto", New Object() {v_TipoOperacion, v_NumeroEnvio, v_CentroCosto, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndTraerCentroCosto(ByVal asyncResult As System.IAsyncResult, ByRef v_CentroCosto As Integer)
            Dim results() As Object = Me.EndInvoke(asyncResult)
            v_CentroCosto = CType(results(0), Integer)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerCentroCostoAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_CentroCosto As Integer, ByVal usuario As String, ByVal IP As String)
            Me.TraerCentroCostoAsync(v_TipoOperacion, v_NumeroEnvio, v_CentroCosto, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerCentroCostoAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_CentroCosto As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerCentroCostoOperationCompleted Is Nothing) Then
                Me.TraerCentroCostoOperationCompleted = AddressOf Me.OnTraerCentroCostoOperationCompleted
            End If
            Me.InvokeAsync("TraerCentroCosto", New Object() {v_TipoOperacion, v_NumeroEnvio, v_CentroCosto, usuario, IP}, Me.TraerCentroCostoOperationCompleted, userState)
        End Sub

        Private Sub OnTraerCentroCostoOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerCentroCostoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerCentroCostoCompleted(Me, New TraerCentroCostoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerListaPorCentroPropio", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerListaPorCentroPropio(ByVal TipoOperacion As String, ByVal p_Estado As String, ByVal p_SoloCentroPropio As Boolean, ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TraerListaPorCentroPropio", New Object() {TipoOperacion, p_Estado, p_SoloCentroPropio, ListaCondiciones, MaxRegistros, usuario, IP})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginTraerListaPorCentroPropio(ByVal TipoOperacion As String, ByVal p_Estado As String, ByVal p_SoloCentroPropio As Boolean, ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerListaPorCentroPropio", New Object() {TipoOperacion, p_Estado, p_SoloCentroPropio, ListaCondiciones, MaxRegistros, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerListaPorCentroPropio(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerListaPorCentroPropioAsync(ByVal TipoOperacion As String, ByVal p_Estado As String, ByVal p_SoloCentroPropio As Boolean, ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String)
            Me.TraerListaPorCentroPropioAsync(TipoOperacion, p_Estado, p_SoloCentroPropio, ListaCondiciones, MaxRegistros, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerListaPorCentroPropioAsync(ByVal TipoOperacion As String, ByVal p_Estado As String, ByVal p_SoloCentroPropio As Boolean, ByVal ListaCondiciones As clsListaCondiciones, ByVal MaxRegistros As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerListaPorCentroPropioOperationCompleted Is Nothing) Then
                Me.TraerListaPorCentroPropioOperationCompleted = AddressOf Me.OnTraerListaPorCentroPropioOperationCompleted
            End If
            Me.InvokeAsync("TraerListaPorCentroPropio", New Object() {TipoOperacion, p_Estado, p_SoloCentroPropio, ListaCondiciones, MaxRegistros, usuario, IP}, Me.TraerListaPorCentroPropioOperationCompleted, userState)
        End Sub

        Private Sub OnTraerListaPorCentroPropioOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerListaPorCentroPropioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerListaPorCentroPropioCompleted(Me, New TraerListaPorCentroPropioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AprobarPropuesta", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub AprobarPropuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("AprobarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginAprobarPropuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AprobarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndAprobarPropuesta(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub AprobarPropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.AprobarPropuestaAsync(v_TipoOperacion, v_NumeroEnvio, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AprobarPropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.AprobarPropuestaOperationCompleted Is Nothing) Then
                Me.AprobarPropuestaOperationCompleted = AddressOf Me.OnAprobarPropuestaOperationCompleted
            End If
            Me.InvokeAsync("AprobarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, Me.AprobarPropuestaOperationCompleted, userState)
        End Sub

        Private Sub OnAprobarPropuestaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AprobarPropuestaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AprobarPropuestaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/AutorizarPropuesta", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub AutorizarPropuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("AutorizarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginAutorizarPropuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AutorizarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndAutorizarPropuesta(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub AutorizarPropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.AutorizarPropuestaAsync(v_TipoOperacion, v_NumeroEnvio, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AutorizarPropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.AutorizarPropuestaOperationCompleted Is Nothing) Then
                Me.AutorizarPropuestaOperationCompleted = AddressOf Me.OnAutorizarPropuestaOperationCompleted
            End If
            Me.InvokeAsync("AutorizarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, Me.AutorizarPropuestaOperationCompleted, userState)
        End Sub

        Private Sub OnAutorizarPropuestaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutorizarPropuestaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutorizarPropuestaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/Firma1Propuesta", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub Firma1Propuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("Firma1Propuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginFirma1Propuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Firma1Propuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndFirma1Propuesta(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub Firma1PropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Firma1PropuestaAsync(v_TipoOperacion, v_NumeroEnvio, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Firma1PropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.Firma1PropuestaOperationCompleted Is Nothing) Then
                Me.Firma1PropuestaOperationCompleted = AddressOf Me.OnFirma1PropuestaOperationCompleted
            End If
            Me.InvokeAsync("Firma1Propuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, Me.Firma1PropuestaOperationCompleted, userState)
        End Sub

        Private Sub OnFirma1PropuestaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Firma1PropuestaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Firma1PropuestaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/Firma2Propuesta", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub Firma2Propuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("Firma2Propuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginFirma2Propuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Firma2Propuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndFirma2Propuesta(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub Firma2PropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Firma2PropuestaAsync(v_TipoOperacion, v_NumeroEnvio, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Firma2PropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.Firma2PropuestaOperationCompleted Is Nothing) Then
                Me.Firma2PropuestaOperationCompleted = AddressOf Me.OnFirma2PropuestaOperationCompleted
            End If
            Me.InvokeAsync("Firma2Propuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, Me.Firma2PropuestaOperationCompleted, userState)
        End Sub

        Private Sub OnFirma2PropuestaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Firma2PropuestaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Firma2PropuestaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/RechazarPropuesta", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub RechazarPropuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_Usuario As String, ByVal v_DescripcionDetallada As String, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("RechazarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, v_Usuario, v_DescripcionDetallada, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginRechazarPropuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_Usuario As String, ByVal v_DescripcionDetallada As String, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RechazarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, v_Usuario, v_DescripcionDetallada, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndRechazarPropuesta(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub RechazarPropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_Usuario As String, ByVal v_DescripcionDetallada As String, ByVal usuario As String, ByVal IP As String)
            Me.RechazarPropuestaAsync(v_TipoOperacion, v_NumeroEnvio, v_Usuario, v_DescripcionDetallada, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub RechazarPropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal v_Usuario As String, ByVal v_DescripcionDetallada As String, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.RechazarPropuestaOperationCompleted Is Nothing) Then
                Me.RechazarPropuestaOperationCompleted = AddressOf Me.OnRechazarPropuestaOperationCompleted
            End If
            Me.InvokeAsync("RechazarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, v_Usuario, v_DescripcionDetallada, usuario, IP}, Me.RechazarPropuestaOperationCompleted, userState)
        End Sub

        Private Sub OnRechazarPropuestaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RechazarPropuestaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RechazarPropuestaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/EnviarPropuesta", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub EnviarPropuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("EnviarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginEnviarPropuesta(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EnviarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndEnviarPropuesta(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub EnviarPropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String)
            Me.EnviarPropuestaAsync(v_TipoOperacion, v_NumeroEnvio, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub EnviarPropuestaAsync(ByVal v_TipoOperacion As String, ByVal v_NumeroEnvio As Integer, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.EnviarPropuestaOperationCompleted Is Nothing) Then
                Me.EnviarPropuestaOperationCompleted = AddressOf Me.OnEnviarPropuestaOperationCompleted
            End If
            Me.InvokeAsync("EnviarPropuesta", New Object() {v_TipoOperacion, v_NumeroEnvio, usuario, IP}, Me.EnviarPropuestaOperationCompleted, userState)
        End Sub

        Private Sub OnEnviarPropuestaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EnviarPropuestaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EnviarPropuestaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/TraerListaPorParams", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function TraerListaPorParams(ByVal v_TipoOperacion As String, ByVal v_Entidad As String, ByVal v_NumeroEnvio_Desde As Integer, ByVal v_NumeroEnvio_Hasta As Integer, ByVal v_CodigoServicio As Integer, ByVal v_FechaCicloDesde As Date, ByVal v_FechaCicloHasta As Date, ByVal usuario As String, ByVal IP As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TraerListaPorParams", New Object() {v_TipoOperacion, v_Entidad, v_NumeroEnvio_Desde, v_NumeroEnvio_Hasta, v_CodigoServicio, v_FechaCicloDesde, v_FechaCicloHasta, usuario, IP})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Function BeginTraerListaPorParams(ByVal v_TipoOperacion As String, ByVal v_Entidad As String, ByVal v_NumeroEnvio_Desde As Integer, ByVal v_NumeroEnvio_Hasta As Integer, ByVal v_CodigoServicio As Integer, ByVal v_FechaCicloDesde As Date, ByVal v_FechaCicloHasta As Date, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("TraerListaPorParams", New Object() {v_TipoOperacion, v_Entidad, v_NumeroEnvio_Desde, v_NumeroEnvio_Hasta, v_CodigoServicio, v_FechaCicloDesde, v_FechaCicloHasta, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndTraerListaPorParams(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub TraerListaPorParamsAsync(ByVal v_TipoOperacion As String, ByVal v_Entidad As String, ByVal v_NumeroEnvio_Desde As Integer, ByVal v_NumeroEnvio_Hasta As Integer, ByVal v_CodigoServicio As Integer, ByVal v_FechaCicloDesde As Date, ByVal v_FechaCicloHasta As Date, ByVal usuario As String, ByVal IP As String)
            Me.TraerListaPorParamsAsync(v_TipoOperacion, v_Entidad, v_NumeroEnvio_Desde, v_NumeroEnvio_Hasta, v_CodigoServicio, v_FechaCicloDesde, v_FechaCicloHasta, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TraerListaPorParamsAsync(ByVal v_TipoOperacion As String, ByVal v_Entidad As String, ByVal v_NumeroEnvio_Desde As Integer, ByVal v_NumeroEnvio_Hasta As Integer, ByVal v_CodigoServicio As Integer, ByVal v_FechaCicloDesde As Date, ByVal v_FechaCicloHasta As Date, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.TraerListaPorParamsOperationCompleted Is Nothing) Then
                Me.TraerListaPorParamsOperationCompleted = AddressOf Me.OnTraerListaPorParamsOperationCompleted
            End If
            Me.InvokeAsync("TraerListaPorParams", New Object() {v_TipoOperacion, v_Entidad, v_NumeroEnvio_Desde, v_NumeroEnvio_Hasta, v_CodigoServicio, v_FechaCicloDesde, v_FechaCicloHasta, usuario, IP}, Me.TraerListaPorParamsOperationCompleted, userState)
        End Sub

        Private Sub OnTraerListaPorParamsOperationCompleted(ByVal arg As Object)
            If (Not (Me.TraerListaPorParamsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TraerListaPorParamsCompleted(Me, New TraerListaPorParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ListarEnvios", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Function ListarEnvios(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> ByVal tipoOperacion As System.Nullable(Of Char), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> ByVal codigoServicio As System.Nullable(Of Integer), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> ByVal codigoCentro As System.Nullable(Of Integer), <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> ByVal estado As System.Nullable(Of Char), ByVal fechaInicio As Date, ByVal fechaFin As Date, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> ByVal modalidad As System.Nullable(Of Char)) As PC_Envio()
            Dim results() As Object = Me.Invoke("ListarEnvios", New Object() {tipoOperacion, codigoServicio, codigoCentro, estado, fechaInicio, fechaFin, modalidad})
            Return CType(results(0), PC_Envio())
        End Function

        '''<remarks/>
        Public Function BeginListarEnvios(ByVal tipoOperacion As System.Nullable(Of Char), ByVal codigoServicio As System.Nullable(Of Integer), ByVal codigoCentro As System.Nullable(Of Integer), ByVal estado As System.Nullable(Of Char), ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal modalidad As System.Nullable(Of Char), ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ListarEnvios", New Object() {tipoOperacion, codigoServicio, codigoCentro, estado, fechaInicio, fechaFin, modalidad}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Function EndListarEnvios(ByVal asyncResult As System.IAsyncResult) As PC_Envio()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0), PC_Envio())
        End Function

        '''<remarks/>
        Public Overloads Sub ListarEnviosAsync(ByVal tipoOperacion As System.Nullable(Of Char), ByVal codigoServicio As System.Nullable(Of Integer), ByVal codigoCentro As System.Nullable(Of Integer), ByVal estado As System.Nullable(Of Char), ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal modalidad As System.Nullable(Of Char))
            Me.ListarEnviosAsync(tipoOperacion, codigoServicio, codigoCentro, estado, fechaInicio, fechaFin, modalidad, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ListarEnviosAsync(ByVal tipoOperacion As System.Nullable(Of Char), ByVal codigoServicio As System.Nullable(Of Integer), ByVal codigoCentro As System.Nullable(Of Integer), ByVal estado As System.Nullable(Of Char), ByVal fechaInicio As Date, ByVal fechaFin As Date, ByVal modalidad As System.Nullable(Of Char), ByVal userState As Object)
            If (Me.ListarEnviosOperationCompleted Is Nothing) Then
                Me.ListarEnviosOperationCompleted = AddressOf Me.OnListarEnviosOperationCompleted
            End If
            Me.InvokeAsync("ListarEnvios", New Object() {tipoOperacion, codigoServicio, codigoCentro, estado, fechaInicio, fechaFin, modalidad}, Me.ListarEnviosOperationCompleted, userState)
        End Sub

        Private Sub OnListarEnviosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListarEnviosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListarEnviosCompleted(Me, New ListarEnviosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.prosoft.cr/ActualizarEstadoEnvio", RequestNamespace:="http://www.prosoft.cr/", ResponseNamespace:="http://www.prosoft.cr/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)> _
        Public Sub ActualizarEstadoEnvio(ByVal NumeroEnvio As Integer, ByVal TipoOperacion As String, ByVal Estado As String, ByVal usuario As String, ByVal IP As String)
            Me.Invoke("ActualizarEstadoEnvio", New Object() {NumeroEnvio, TipoOperacion, Estado, usuario, IP})
        End Sub

        '''<remarks/>
        Public Function BeginActualizarEstadoEnvio(ByVal NumeroEnvio As Integer, ByVal TipoOperacion As String, ByVal Estado As String, ByVal usuario As String, ByVal IP As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActualizarEstadoEnvio", New Object() {NumeroEnvio, TipoOperacion, Estado, usuario, IP}, callback, asyncState)
        End Function

        '''<remarks/>
        Public Sub EndActualizarEstadoEnvio(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub

        '''<remarks/>
        Public Overloads Sub ActualizarEstadoEnvioAsync(ByVal NumeroEnvio As Integer, ByVal TipoOperacion As String, ByVal Estado As String, ByVal usuario As String, ByVal IP As String)
            Me.ActualizarEstadoEnvioAsync(NumeroEnvio, TipoOperacion, Estado, usuario, IP, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ActualizarEstadoEnvioAsync(ByVal NumeroEnvio As Integer, ByVal TipoOperacion As String, ByVal Estado As String, ByVal usuario As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ActualizarEstadoEnvioOperationCompleted Is Nothing) Then
                Me.ActualizarEstadoEnvioOperationCompleted = AddressOf Me.OnActualizarEstadoEnvioOperationCompleted
            End If
            Me.InvokeAsync("ActualizarEstadoEnvio", New Object() {NumeroEnvio, TipoOperacion, Estado, usuario, IP}, Me.ActualizarEstadoEnvioOperationCompleted, userState)
        End Sub

        Private Sub OnActualizarEstadoEnvioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarEstadoEnvioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarEstadoEnvioCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.SerializableAttribute(), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.prosoft.cr/")> _
    Partial Public Class PC_Envio

        Private tipoOperacionField As Char

        Private numeroEnvioField As Integer

        Private codigoServicioField As System.Nullable(Of Integer)

        Private codigoCentroField As System.Nullable(Of Integer)

        Private fechaCicloField As Date

        Private descripcionGenField As String

        Private estadoEnvioSinpeField As Char

        Private importadoField As System.Nullable(Of Char)

        Private usuarioApruebaField As String

        Private fechaAprobacionField As System.Nullable(Of Date)

        Private usuarioEnviaField As String

        Private fechaEnvioField As System.Nullable(Of Date)

        Private usuarioAutorizaField As String

        Private fechaAutorizaField As System.Nullable(Of Date)

        Private consecutivoArchivoField As System.Nullable(Of Short)

        Private usuarioFirma1Field As String

        Private usuarioFirma2Field As String

        Private fechaFirma1Field As System.Nullable(Of Date)

        Private fechaFirma2Field As System.Nullable(Of Date)

        Private modalidadField As System.Nullable(Of Char)

        Private usuarioRechazoField As String

        Private fechaRechazoField As System.Nullable(Of Date)

        Private observacionesRechazoField As String

        '''<remarks/>
        Public Property TipoOperacion() As Char
            Get
                Return Me.tipoOperacionField
            End Get
            Set(ByVal value As Char)
                Me.tipoOperacionField = value
            End Set
        End Property

        '''<remarks/>
        Public Property NumeroEnvio() As Integer
            Get
                Return Me.numeroEnvioField
            End Get
            Set(ByVal value As Integer)
                Me.numeroEnvioField = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property CodigoServicio() As System.Nullable(Of Integer)
            Get
                Return Me.codigoServicioField
            End Get
            Set(ByVal value As System.Nullable(Of Integer))
                Me.codigoServicioField = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property CodigoCentro() As System.Nullable(Of Integer)
            Get
                Return Me.codigoCentroField
            End Get
            Set(ByVal value As System.Nullable(Of Integer))
                Me.codigoCentroField = value
            End Set
        End Property

        '''<remarks/>
        Public Property FechaCiclo() As Date
            Get
                Return Me.fechaCicloField
            End Get
            Set(ByVal value As Date)
                Me.fechaCicloField = value
            End Set
        End Property

        '''<remarks/>
        Public Property DescripcionGen() As String
            Get
                Return Me.descripcionGenField
            End Get
            Set(ByVal value As String)
                Me.descripcionGenField = value
            End Set
        End Property

        '''<remarks/>
        Public Property EstadoEnvioSinpe() As Char
            Get
                Return Me.estadoEnvioSinpeField
            End Get
            Set(ByVal value As Char)
                Me.estadoEnvioSinpeField = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property Importado() As System.Nullable(Of Char)
            Get
                Return Me.importadoField
            End Get
            Set(ByVal value As System.Nullable(Of Char))
                Me.importadoField = value
            End Set
        End Property

        '''<remarks/>
        Public Property UsuarioAprueba() As String
            Get
                Return Me.usuarioApruebaField
            End Get
            Set(ByVal value As String)
                Me.usuarioApruebaField = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property FechaAprobacion() As System.Nullable(Of Date)
            Get
                Return Me.fechaAprobacionField
            End Get
            Set(ByVal value As System.Nullable(Of Date))
                Me.fechaAprobacionField = value
            End Set
        End Property

        '''<remarks/>
        Public Property UsuarioEnvia() As String
            Get
                Return Me.usuarioEnviaField
            End Get
            Set(ByVal value As String)
                Me.usuarioEnviaField = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property FechaEnvio() As System.Nullable(Of Date)
            Get
                Return Me.fechaEnvioField
            End Get
            Set(ByVal value As System.Nullable(Of Date))
                Me.fechaEnvioField = value
            End Set
        End Property

        '''<remarks/>
        Public Property UsuarioAutoriza() As String
            Get
                Return Me.usuarioAutorizaField
            End Get
            Set(ByVal value As String)
                Me.usuarioAutorizaField = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property FechaAutoriza() As System.Nullable(Of Date)
            Get
                Return Me.fechaAutorizaField
            End Get
            Set(ByVal value As System.Nullable(Of Date))
                Me.fechaAutorizaField = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property ConsecutivoArchivo() As System.Nullable(Of Short)
            Get
                Return Me.consecutivoArchivoField
            End Get
            Set(ByVal value As System.Nullable(Of Short))
                Me.consecutivoArchivoField = value
            End Set
        End Property

        '''<remarks/>
        Public Property UsuarioFirma1() As String
            Get
                Return Me.usuarioFirma1Field
            End Get
            Set(ByVal value As String)
                Me.usuarioFirma1Field = value
            End Set
        End Property

        '''<remarks/>
        Public Property UsuarioFirma2() As String
            Get
                Return Me.usuarioFirma2Field
            End Get
            Set(ByVal value As String)
                Me.usuarioFirma2Field = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property FechaFirma1() As System.Nullable(Of Date)
            Get
                Return Me.fechaFirma1Field
            End Get
            Set(ByVal value As System.Nullable(Of Date))
                Me.fechaFirma1Field = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property FechaFirma2() As System.Nullable(Of Date)
            Get
                Return Me.fechaFirma2Field
            End Get
            Set(ByVal value As System.Nullable(Of Date))
                Me.fechaFirma2Field = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property Modalidad() As System.Nullable(Of Char)
            Get
                Return Me.modalidadField
            End Get
            Set(ByVal value As System.Nullable(Of Char))
                Me.modalidadField = value
            End Set
        End Property

        '''<remarks/>
        Public Property UsuarioRechazo() As String
            Get
                Return Me.usuarioRechazoField
            End Get
            Set(ByVal value As String)
                Me.usuarioRechazoField = value
            End Set
        End Property

        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=True)> _
        Public Property FechaRechazo() As System.Nullable(Of Date)
            Get
                Return Me.fechaRechazoField
            End Get
            Set(ByVal value As System.Nullable(Of Date))
                Me.fechaRechazoField = value
            End Set
        End Property

        '''<remarks/>
        Public Property ObservacionesRechazo() As String
            Get
                Return Me.observacionesRechazoField
            End Get
            Set(ByVal value As String)
                Me.observacionesRechazoField = value
            End Set
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AgregarBDCompletedEventHandler(ByVal sender As Object, ByVal e As AgregarBDCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class AgregarBDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub BorrarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ModificarBDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ModificarFechaCicloCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerCodigoEntidadCompletedEventHandler(ByVal sender As Object, ByVal e As TraerCodigoEntidadCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerCodigoEntidadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerRegistroBDCompletedEventHandler(ByVal sender As Object, ByVal e As TraerRegistroBDCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerRegistroBDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property v_CodigoServicio() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_FechaCiclo() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(1), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_DescripcionGen() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(2), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_EstadoEnvioSinpe() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(3), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_Importado() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(4), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_UsuarioAprueba() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(5), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_FechaAprobacion() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(6), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_UsuarioEnvia() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(7), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_FechaEnvio() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(8), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_UsuarioAutoriza() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(9), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_FechaAutoriza() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(10), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_NumeroConsecutivo() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(11), Integer)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_UsuarioFirma1() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(12), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_FechaFirma1() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(13), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_UsuarioFirma2() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(14), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_FechaFirma2() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(15), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_modalidad() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(16), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_CentroCosto() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(17), Integer)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_UsuarioRechazo() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(18), String)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_FechaRechazo() As Date
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(19), Date)
            End Get
        End Property

        '''<remarks/>
        Public ReadOnly Property v_ObservacionesRechazo() As String
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(20), String)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ActualizarCentroCostoPredominanteCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarCentroCostoPredominanteCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ActualizarCentroCostoPredominanteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Boolean)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerCentroCostoCompletedEventHandler(ByVal sender As Object, ByVal e As TraerCentroCostoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerCentroCostoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property v_CentroCosto() As Integer
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), Integer)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerListaPorCentroPropioCompletedEventHandler(ByVal sender As Object, ByVal e As TraerListaPorCentroPropioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerListaPorCentroPropioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AprobarPropuestaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub AutorizarPropuestaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub Firma1PropuestaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub Firma2PropuestaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub RechazarPropuestaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub EnviarPropuestaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub TraerListaPorParamsCompletedEventHandler(ByVal sender As Object, ByVal e As TraerListaPorParamsCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class TraerListaPorParamsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ListarEnviosCompletedEventHandler(ByVal sender As Object, ByVal e As ListarEnviosCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038"), _
     System.Diagnostics.DebuggerStepThroughAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code")> _
    Partial Public Class ListarEnviosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As PC_Envio()
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), PC_Envio())
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")> _
    Public Delegate Sub ActualizarEstadoEnvioCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

End Namespace